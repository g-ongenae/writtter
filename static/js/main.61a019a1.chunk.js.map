{"version":3,"sources":["Config.js","components/Connect.js","Context.js","components/creates/TagChoices.js","components/creates/RuleChoices.js","components/creates/CreateCompetition.js","components/creates/CreateRule.js","components/creates/CreateStory.js","components/creates/CreateView.js","components/SearchPage.js","components/Menu.js","components/lists/Stories.js","components/lists/Competitions.js","components/lists/Comments.js","components/UserPage.js","components/creates/CreateUser.js","utils/QueryStringParser.js","components/readers/StoryReader.js","components/editor/StoryEditor.js","components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["local","process","this","FRONT_BASE_URL","API_BASE_URL","url","Connect","props","state","username","password","data","auth","handleChange","bind","handleSubmit","field","event","obj","target","value","setState","preventDefault","fetch","Config","getApi","method","headers","Accept","response","ok","console","log","status","message","Error","statusText","alert","json","authorization","get","JSON","stringify","window","location","href","getUrl","className","onSubmit","id","type","name","placeholder","onChange","required","Component","key","hasOwnProperty","TagChoices","tags","isLoading","Context","has","request","error","tagsChoices","map","tag","multiple","RuleChoices","rules","rulesChoices","rule","CreateCompetition","description","finishDate","htmlFor","rows","DatePicker","competition","defaultChecked","userId","binder","d","Date","min","getDate","getMonth","getUTCFullYear","data-date-format","icon","Calendar","CreateRule","CreateStory","isPublic","isCommentsDisabled","checked","body","ownerId","handleCheck","CreateView","Menu","activeViewName","pathname","path","to","macro","propName","SearchPage","SearchBar","SearchResults","Search","results","Centered","text","Array","isEmpty","items","item","index","SearchResultItem","lastEditedAt","logButtons","push","onClick","unset","style","color","Stories","stories","liked","isArray","length","storyList","story","createdAt","toDateString","Competitions","Comments","UserPage","userData","UserMenu","UserSwitch","CreateUser","email","Eye","search","query","URLSearchParams","token","set","StoryReader","storyId","QSParser","setAuth","editLink","connectLink","date","content","formIsHidden","toggleForm","StoryEditorForm","Fold","ArrowLeft","form","HomePage","App","component","AboutView","match","params","exact","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.61a019a1.chunk.js","sourcesContent":["export class Config {\n  constructor(local = process.env.NODE_ENV) {\n    this.FRONT_BASE_URL = local === \"development\" ? \"\" : \"/writtter\";\n    this.API_BASE_URL = local === \"development\" ? \"http://localhost:8080\" : \"https://writtter.herokuapp.com\";\n  }\n\n  /**\n   * Return the full path of the API request\n   * @param {URI} url the path to target.\n   */\n  getApi(url = \"\") {\n    return `${this.API_BASE_URL}${url}`;\n  }\n\n  /**\n   * Return the full path of the front view url\n   * @param {URI} url the path to target.\n   */\n  getUrl(url = \"\") {\n    return `${this.FRONT_BASE_URL}${url}`;\n  }\n}\n\nexport default new Config();","import React, { Component } from \"react\";\n\nimport Config from \"../Config\";\n\nexport default class Connect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      data: null,\n      auth: null\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(field, event) {\n    const obj = {};\n    obj[field] = event.target.value;\n    this.setState(obj);\n  }\n\n  async handleSubmit(event) {\n    // Prevent from refreshing\n    event.preventDefault();\n\n    // Send data to the server\n    const response = await fetch(Config.getApi(\"/users/login\"), {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        username: this.state.username,\n        password: this.state.password\n      }\n    });\n\n    if (!response.ok) {\n      console.log(\"Failed to authenticate\", response);\n      let message;\n\n      switch (response.status) {\n        case 404:\n          message = \"Username does not exist\";\n          break;\n        case 401:\n          message = \"Wrong password\";\n          break;\n        default:\n          throw new Error(response.statusText);\n      }\n\n      alert(message);\n\n      return;\n    }\n\n    const data = await response.json();\n    const auth = {\n      authorization: response.headers.get(\"authorization\"),\n      \"x-access-token\": response.headers.get(\"x-access-token\")\n    };\n    this.setState({ auth, data });\n    console.log(\"Connect Request\", JSON.stringify(this.state));\n\n    // Redirect\n    window.location.href = Config.getUrl(`/?a=${auth.authorization}`);\n  }\n\n  render() {\n    return (\n      <div className=\"App-sub-section\">\n        <div className=\"container\">\n          <h1> Connect </h1>\n          <form onSubmit={this.handleSubmit}>\n            <fieldset className=\"form-group\">\n              <label>Username:</label>\n              <input\n                id=\"username\"\n                type=\"text\"\n                name=\"title\"\n                className=\"form-control\"\n                placeholder=\"Enter your username\"\n                value={this.state.username}\n                onChange={this.handleChange.bind(this, \"username\")}\n                required\n              />\n            </fieldset>\n            <fieldset className=\"form-group\">\n              <label>Password:</label>\n              <input\n                id=\"password\"\n                type=\"password\"\n                name=\"password\"\n                className=\"form-control\"\n                placeholder=\"Enter your password\"\n                value={this.state.password}\n                onChange={this.handleChange.bind(this, \"password\")}\n                required\n              />\n            </fieldset>\n            <fieldset className=\"form-group text-center\">\n              <input type=\"submit\" value=\"Log in\" className=\"btn btn-primary\" />\n            </fieldset>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","export class Context {\n  constructor() {\n    this.data = {};\n  }\n\n  set(key, value) {\n    this.data[key] = value;\n  }\n\n  unset(key) {\n    delete this.data[key];\n  }\n\n  get(key) {\n    return this.data[key];\n  }\n\n  has(key) {\n    return this.data.hasOwnProperty(key);\n  }\n}\n\nexport default new Context();","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\nimport Context from \"../../Context\";\n\nexport default class TagChoices extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: [],\n      isLoading: false\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n\n    let headers = {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    };\n\n    if (Context.has(\"auth\")) {\n      headers = { ...headers, ...Context.get(\"auth\") };\n    }\n\n    const request = {\n      method: \"GET\",\n      headers\n    };\n\n    try {\n      const response = await fetch(Config.getApi(\"/tags\"), request);\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch tags\");\n      }\n\n      const data = await response.json();\n      this.setState({ tags: data, isLoading: false });\n    } catch (error) {\n      this.setState({ error, isLoading: false });\n    }\n  }\n\n  render() {\n    const tagsChoices = this.state.tags.map(tag => (\n      <option value={tag.id}>{tag.name}</option>\n    ));\n\n    return (\n      <select name=\"tags\" className=\"form-control\" multiple>\n        {tagsChoices}\n      </select>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\nimport Context from \"../../Context\";\n\nexport default class RuleChoices extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rules: [],\n      isLoading: false\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n\n    let headers = {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    };\n\n    if (Context.has(\"auth\")) {\n      headers = { ...headers, ...Context.get(\"auth\") };\n    }\n\n    const request = {\n      method: \"GET\",\n      headers\n    };\n\n    try {\n      const response = await fetch(Config.getApi(\"/rules\"), request);\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch tags\");\n      }\n\n      const data = await response.json();\n      this.setState({ rules: data, isLoading: false });\n    } catch (error) {\n      this.setState({ error, isLoading: false });\n    }\n  }\n\n  render() {\n    const rulesChoices = this.state.rules.map(rule => (\n      <option value={rule.id}>{rule.name}</option>\n    ));\n\n    return (\n      <select name=\"rules\" className=\"form-control\" multiple>\n        {rulesChoices}\n      </select>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Octicon, { Calendar } from \"@primer/octicons-react\";\n\nimport TagChoices from \"./TagChoices\";\nimport RuleChoices from \"./RuleChoices\";\n\nexport default class CreateCompetition extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      description: \"\",\n      finishDate: \"\"\n    };\n  }\n\n  handleChange(field, event) {\n    const obj = {};\n    obj[field] = event.target.value;\n    this.setState(obj);\n  }\n\n  render() {\n    return (\n      <div className=\"App-sub-section\">\n        <div className=\"container\">\n          <h1>Create a new competition</h1>\n\n          <form>\n            <fieldset className=\"form-group\">\n              <label htmlFor=\"title\">Title:</label>\n              <input\n                value={this.state.name}\n                onChange={this.handleChange.bind(this, \"name\")}\n                id=\"name\"\n                type=\"text\"\n                name=\"name\"\n                className=\"form-control\"\n                placeholder=\"Enter title\"\n              />\n            </fieldset>\n            <fieldset className=\"form-group\">\n              <label>Description:</label>\n              <textarea\n                value={this.state.description}\n                onChange={this.handleChange.bind(this, \"description\")}\n                name=\"description\"\n                className=\"form-control\"\n                placeholder=\"Write a description for your story\"\n                rows=\"3\"\n              />\n            </fieldset>\n            <fieldset className=\"form-group\">\n              <label>Due date:</label>\n              <DatePicker competition={this} />\n            </fieldset>\n            <fieldset className=\"form-group\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                name=\"isPublic\"\n              />\n              <label className=\"form-check-label\">Public Mode</label>\n            </fieldset>\n            <fieldset className=\"form-group\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                name=\"commentsEnabled\"\n                defaultChecked\n              />\n              <label className=\"form-check-label\">Comments enabled</label>\n            </fieldset>\n            <fieldset className=\"form-group\">\n              <label>Rules:</label>\n              <RuleChoices userId={this.props.userId} binder={this} />\n            </fieldset>\n            <fieldset className=\"form-group\">\n              <label>Tags:</label>\n              <TagChoices userId={this.props.userId} binder={this} />\n            </fieldset>\n            <fieldset className=\"form-group text-center\">\n              <input\n                type=\"submit\"\n                value=\"Create competition\"\n                className=\"btn btn-primary\"\n              />\n            </fieldset>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction DatePicker({ competition }) {\n  const d = new Date();\n  const min = `${d.getDate()}/${d.getMonth()}/${d.getUTCFullYear()}`;\n\n  return (\n    <div className=\"input-group date\">\n      <input\n        value={competition.state.finishDate}\n        onChange={competition.handleChange.bind(competition, \"finishDate\")}\n        className=\"form-control\"\n        data-date-format=\"mm/dd/yyyy\"\n        type=\"date\"\n        min={min}\n      />\n      <span className=\"input-group-append\">\n        <span className=\"input-group-text\">\n          <Octicon icon={Calendar} />\n        </span>\n      </span>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nimport TagChoices from \"./TagChoices\";\n\nexport default class CreateRule extends Component {\n  render() {\n    return (\n      <div className=\"App-sub-section\">\n        <div className=\"container\">\n          <h1>Create a new rule</h1>\n\n          <form>\n            <fieldset className=\"form-group\">\n              <label htmlFor=\"title\">Title:</label>\n              <input\n                id=\"title\"\n                type=\"text\"\n                name=\"title\"\n                className=\"form-control\"\n                placeholder=\"Enter title\"\n              />\n            </fieldset>\n            <fieldset className=\"form-group\">\n              <label>Description:</label>\n              <textarea\n                name=\"description\"\n                className=\"form-control\"\n                placeholder=\"Write a description for your story\"\n                rows=\"3\"\n              />\n            </fieldset>\n            <fieldset className=\"form-group\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                name=\"isPublic\"\n              />\n              <label className=\"form-check-label\">Public Mode</label>\n            </fieldset>\n            <fieldset className=\"form-group\">\n              <label>Tags:</label>\n              <TagChoices userId={this.props.userId} />\n            </fieldset>\n            <fieldset className=\"form-group text-center\">\n              <input\n                type=\"submit\"\n                value=\"Create rule\"\n                className=\"btn btn-primary\"\n              />\n            </fieldset>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\nimport Context from \"../../Context\";\n\nimport TagChoices from \"./TagChoices\";\nimport RuleChoices from \"./RuleChoices\";\n\nexport default class CreateStory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      isPublic: false,\n      isCommentsDisabled: false,\n      description: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(field, event) {\n    this.setState({\n      [field]: event.target.value\n    });\n  }\n\n  handleCheck(field, event) {\n    this.setState({\n      [field]: event.target.checked\n    });\n  }\n\n  async handleSubmit(event) {\n    // Prevent from refreshing\n    event.preventDefault();\n\n    // Send data to the server\n    const response = await fetch(Config.getApi(\"/stories\"), {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        ...(Context.get(\"auth\") || {})\n      },\n      body: JSON.stringify({\n        ownerId: this.state.ownerId,\n        name: this.state.name,\n        description: this.state.description,\n        isPublic: this.state.isPublic,\n        isCommentsDisabled: !this.state.isCommentsDisabled\n      })\n    });\n\n    if (!response.ok) {\n      console.error(\"Failed to create story\", response);\n      throw new Error(response.statusText);\n    }\n\n    const data = await response.json();\n\n    // Redirect\n    window.location.href = Config.getUrl(\n      `/story/${data.id}/?a=${Context.get(\"auth\").authorization}`\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App-sub-section\">\n        <div className=\"container\">\n          <h1>Create a new story</h1>\n\n          <form onSubmit={this.handleSubmit}>\n            <fieldset className=\"form-group\">\n              <label htmlFor=\"title\">Title:</label>\n              <input\n                id=\"title\"\n                type=\"text\"\n                name=\"title\"\n                className=\"form-control\"\n                placeholder=\"Enter title\"\n                value={this.state.name}\n                onChange={this.handleChange.bind(this, \"name\")}\n              />\n            </fieldset>\n            <fieldset className=\"form-group\">\n              <label>Description:</label>\n              <textarea\n                name=\"description\"\n                className=\"form-control\"\n                placeholder=\"Write a description for your story\"\n                rows=\"3\"\n                value={this.state.description}\n                onChange={this.handleChange.bind(this, \"description\")}\n              />\n            </fieldset>\n            <fieldset className=\"form-group\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                name=\"isPublic\"\n                value={this.state.isPublic}\n                onChange={this.handleCheck.bind(this, \"isPublic\")}\n              />\n              <label className=\"form-check-label\">Public Mode</label>\n            </fieldset>\n            <fieldset className=\"form-group\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                name=\"commentsEnabled\"\n                defaultChecked\n                value={this.state.isCommentsDisabled}\n                onChange={this.handleCheck.bind(this, \"isCommentsDisabled\")}\n              />\n              <label className=\"form-check-label\">Comments enabled</label>\n            </fieldset>\n            <fieldset className=\"form-group\">\n              <label>Rules:</label>\n              <RuleChoices userId={this.props.userId} />\n            </fieldset>\n            <fieldset className=\"form-group\">\n              <label>Tags:</label>\n              <TagChoices userId={this.props.userId} />\n            </fieldset>\n            <fieldset className=\"form-group text-center\">\n              <input\n                type=\"submit\"\n                value=\"Create story\"\n                className=\"btn btn-primary\"\n              />\n            </fieldset>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n\nimport Config from \"../../Config\";\nimport Context from \"../../Context\";\n\nimport CreateCompetition from \"./CreateCompetition\";\nimport CreateRule from \"./CreateRule\";\nimport CreateStory from \"./CreateStory\";\n\nexport default function CreateView(props) {\n  if (!Context.has(\"auth\")) {\n    return (\n      <section className=\"App-section\">\n        <h1>Take part in a fantastic world of stories!</h1>\n        <p className=\"text-center\">\n          You need to be authenticated to create a story.\n          <br />\n          <Link to={Config.getUrl(\"/register\")}>Create a new account</Link>\n          <br />\n          <Link to={Config.getUrl(\"/login\")}>Or connect to your account</Link>\n        </p>\n      </section>\n    );\n  }\n\n  return (\n    <Router>\n      <Menu activeViewName={props.location.pathname} />\n\n      <Switch>\n        <Route path={Config.getUrl(\"/create/story\")}>\n          <CreateStory />\n        </Route>\n        <Route path={Config.getUrl(\"/create/competition\")}>\n          <CreateCompetition />\n        </Route>\n        <Route path={Config.getUrl(\"/create/rule\")}>\n          <CreateRule />\n        </Route>\n        <Route path={Config.getUrl(\"/create\")}>\n          <CreateStory />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\n/**\n * @todo fix button not changing color when clicked (use onClick event)\n * @param {string} activeViewName\n */\nfunction Menu({ activeViewName }) {\n  const active = \"btn btn-lg btn-block btn-outline-primary\";\n  const inactive = \"btn btn-lg btn-block btn-primary\";\n  const macro = propName =>\n    `/create/${propName}` === activeViewName ? active : inactive;\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light rounded\">\n      <div className=\"navbar-collapse justify-content-md-center\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item active\">\n            <span className=\"nav-link\">\n              <Link\n                to={Config.getUrl(\"/create/story\")}\n                className={macro(\"story\")}\n              >\n                Story\n              </Link>\n            </span>\n          </li>\n          <li className=\"nav-item\">\n            <span className=\"nav-link\">\n              <Link\n                to={Config.getUrl(\"/create/competition\")}\n                className={macro(\"competition\")}\n              >\n                Competition\n              </Link>\n            </span>\n          </li>\n          <li className=\"nav-item\">\n            <span className=\"nav-link\">\n              <Link\n                to={Config.getUrl(\"/create/rule\")}\n                className={macro(\"rule\")}\n              >\n                Rule\n              </Link>\n            </span>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n","import React, { Component } from \"react\";\nimport Octicon, { Search } from \"@primer/octicons-react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nimport Config from \"../Config\";\n\nexport default class SearchPage extends Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <SearchBar />\n          <SearchResults />\n        </Router>\n      </div>\n    );\n  }\n}\n\nfunction SearchBar() {\n  return (\n    <div className=\"container\">\n      <h1> Search Page </h1>\n      <div className=\"App-sub-section\">\n        <form className=\"form-row\">\n          <div className=\"col-sm-2\"></div>\n          <fieldset className=\"col-sm-7 form-group\">\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <div className=\"input-group-text\">\n                  <Octicon icon={Search} />\n                </div>\n              </div>\n              <input\n                id=\"search\"\n                type=\"search\"\n                name=\"search\"\n                className=\"form-control\"\n                required\n              />\n            </div>\n          </fieldset>\n          <fieldset className=\"col-sm-2 form-group\">\n            <input type=\"submit\" value=\"Search\" className=\"btn btn-primary\" />\n          </fieldset>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nfunction SearchResults({ results }) {\n  // waiting for search to be made\n  if (!results) {\n    return <Centered text=\"Make a search\" />;\n  }\n\n  // or a funny drawing (not found 404)\n  if (Array.isEmpty(results)) {\n    return <Centered text=\"No search results found\" />;\n  }\n\n  // Search results\n  const items = results.map((item, index) => (\n    <SearchResultItem index={index} item={item} />\n  ));\n  return <div className=\"container\">{items}</div>;\n}\n\nfunction SearchResultItem({ item, index }) {\n  return (\n    <div className=\"panel panel-default\">\n      <div className=\"panel-heading\">\n        {item.name} — by {item.ownerId} — {item.lastEditedAt}\n      </div>\n      <div className=\"panel-body\">{item.description}</div>\n      <div className=\"panel-footer\">\n        <Link to={Config.getUrl(`/story/${item.id}`)}>Read the story</Link>\n        <Link to={Config.getUrl(`/story/${item.id}/edit`)}>Edit the story</Link>\n      </div>\n    </div>\n  );\n}\n\nfunction Centered({ text }) {\n  return (\n    <div className=\"jumbotron d-flex align-items-center\">\n      <div className=\"container text-center\">\n        <h2>{text}</h2>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Config from \"../Config\";\nimport Context from \"../Context\";\n\nexport default function Menu() {\n  const logButtons = [];\n  // TODO simplify\n  if (!Context.has(\"auth\")) {\n    logButtons.push(\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to={Config.getUrl(\"/login\")}>\n          Log in\n        </Link>\n      </li>\n    );\n    logButtons.push(\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to={Config.getUrl(\"/register\")}>\n          Register\n        </Link>\n      </li>\n    );\n  } else {\n    logButtons.push(\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to={Config.getUrl(\"/profile\")}>\n          Profile\n        </Link>\n      </li>\n    );\n    logButtons.push(\n      <li\n        className=\"nav-item\"\n        onClick={() => {\n          Context.unset(\"auth\");\n          window.location.href = Config.getUrl(\"/\");\n        }}\n      >\n        <span className=\"nav-link\" style={{ color: \"lightcoral\" }}>\n          Log out\n        </span>\n      </li>\n    );\n  }\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to={Config.getUrl(\"/\")}>\n        {\" \"}\n        Writtter{\" \"}\n      </Link>\n      {/* TODO fix me \n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button> */}\n\n      <div\n        className=\"collapse navbar-collapse show\"\n        id=\"navbarSupportedContent\"\n      >\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={Config.getUrl(\"/about\")}>\n              About\n            </Link>\n          </li>\n          {/* <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={Config.getUrl(\"/search\")}>\n              Search\n            </Link>\n          </li> */}\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={Config.getUrl(\"/create\")}>\n              Create\n            </Link>\n          </li>\n          {logButtons[0]}\n          {logButtons[1]}\n        </ul>\n        {/* <form className=\"form-inline my-2 my-lg-0\">\n          <input\n            className=\"form-control mr-sm-2\"\n            type=\"search\"\n            placeholder=\"Search\"\n            aria-label=\"Search\"\n          />\n          <button\n            className=\"btn btn-outline-success my-2 my-sm-0\"\n            type=\"submit\"\n          >\n            Search\n          </button>\n        </form> */}\n      </div>\n    </nav>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Config from \"../../Config\";\nimport Context from \"../../Context\";\n\nexport default class Stories extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stories: null,\n      isLoading: false,\n      userId: props.userId || null,\n      liked: props.liked || false\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n\n    try {\n      let headers = {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      };\n\n      if (Context.has(\"auth\")) {\n        headers = { ...headers, ...Context.get(\"auth\") };\n      }\n\n      const request = {\n        method: \"GET\",\n        headers\n      };\n\n      let response;\n\n      if (this.state.userId && !this.state.liked) {\n        response = await fetch(\n          Config.getApi(`/stories/users/${this.state.userId}`),\n          request\n        );\n      } else if (this.state.userId && this.state.liked) {\n        response = await fetch(\n          Config.getApi(`/stories/likes/${this.state.userId}`),\n          request\n        );\n      } else {\n        response = await fetch(Config.getApi(\"/stories/all\"), request);\n      }\n\n      if (!response.ok) {\n        console.log(\"Error fetching stories\", response);\n        throw new Error(\"Could not fetch stories\");\n      }\n\n      const stories = await response.json();\n      this.setState({ stories, isLoading: false });\n    } catch (error) {\n      this.setState({ error, isLoading: false });\n    }\n  }\n\n  render() {\n    const { stories, isLoading, error } = this.state;\n\n    if (error) {\n      return (\n        <div className=\"App-section\">\n          An error occurred, sorry: {error.message}\n        </div>\n      );\n    }\n\n    if (isLoading || !stories) {\n      return <div className=\"App-section\">Loading story...</div>;\n    }\n\n    if (Array.isArray(stories) && stories.length === 0) {\n      return <div className=\"App-section\">No stories</div>;\n    }\n\n    const storyList = stories.map(story => (\n      <li key={story.id} className=\"list-group-item text-secondary\">\n        <b>\n          <Link to={Config.getUrl(`/story/${story.id}`)}>{story.name}</Link>\n        </b>{\" \"}\n        — by{\" \"}\n        <Link to={Config.getUrl(`/user/${story.ownerId}`)}>\n          {story.ownerId}\n        </Link>{\" \"}\n        — {new Date(story.lastEditedAt || story.createdAt).toDateString()}\n      </li>\n    ));\n\n    return (\n      <div className=\"App-section\">\n        <ul name=\"rules\" className=\"list-group\">\n          {storyList}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function Competitions() {\n  return <div className=\"App-section\"> Coming soon... </div>;\n}\n","import React from \"react\";\n\nexport default function Comments() {\n  return <div className=\"App-section\"> Coming soon... </div>;\n}\n","import React, { Component } from \"react\";\nimport { Link, Route, Switch } from \"react-router-dom\";\n\nimport Config from \"../Config\";\nimport Context from \"../Context\";\n\nimport Stories from \"./lists/Stories\";\nimport Competitions from \"./lists/Competitions.js\";\nimport Comments from \"./lists/Comments\";\n\nexport default class UserPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      userId: props.userId,\n      userData: props.userData || null,\n      error: null\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n\n    let headers = {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    };\n\n    if (Context.has(\"auth\")) {\n      headers = { ...headers, ...Context.get(\"auth\") };\n    }\n\n    const request = {\n      method: \"GET\",\n      headers\n    };\n\n    try {\n      let response;\n      if (!this.state.userId) {\n        response = await fetch(Config.getApi(\"/users/auth\"), request);\n      } else {\n        response = await fetch(\n          Config.getApi(`/users/${this.state.userId}`),\n          request\n        );\n      }\n\n      if (!response.ok) {\n        console.log(\"Request failed\", response);\n        throw new Error(response.statusText);\n      }\n\n      const userData = await response.json();\n      this.setState({ isLoading: false, userData, userId: userData.id });\n    } catch (error) {\n      console.error(\"An error occurred: \", error);\n      this.setState({ error, isLoading: false });\n    }\n  }\n\n  render() {\n    const { error, isLoading, userData } = this.state;\n    if (error || (!isLoading && !userData)) {\n      return (\n        <section className=\"App-section\">\n          <h1>An error occurred: {error && error.message}</h1>\n        </section>\n      );\n    }\n\n    if (isLoading) {\n      return (\n        <section className=\"App-section\">\n          <h1>Loading...</h1>\n        </section>\n      );\n    }\n\n    // TODO add style and details about the user\n    return (\n      <div>\n        <div>\n          <h1>\n            <small className=\"text-muted\">Profile of</small>{\" \"}\n            {this.state.userData.username}\n          </h1>\n        </div>\n\n        <UserMenu\n          userId={this.state.userId}\n          activeViewName={window.location.pathname}\n        />\n        <UserSwitch userId={this.state.userId} />\n      </div>\n    );\n  }\n}\n\nfunction UserSwitch({ userId }) {\n  return (\n    <Switch>\n      <Route path={Config.getUrl(\"/user/:userId/stories\")}>\n        <Stories liked={false} userId={userId} />\n      </Route>\n      <Route path={Config.getUrl(\"/user/:userId/competitions\")}>\n        <Competitions userId={userId} />\n      </Route>\n      <Route path={Config.getUrl(\"/user/:userId/likes\")}>\n        <Stories liked={true} userId={userId} />\n      </Route>\n      <Route path={Config.getUrl(\"/user/:userId/comments\")}>\n        <Comments userId={userId} />\n      </Route>\n      <Route path={Config.getUrl(\"/user/:userId/rules\")}>\n        <Comments userId={userId} />\n      </Route>\n      <Route path={Config.getUrl(\"/user/:userId\")}>\n        <Stories liked={false} userId={userId} />\n      </Route>\n    </Switch>\n  );\n}\n\nfunction UserMenu({ userId, activeViewName }) {\n  const active = \"btn btn-lg btn-block btn-outline-primary\";\n  const inactive = \"btn btn-lg btn-block btn-primary\";\n  const macro = propName =>\n    `user/${userId}/${propName}` === activeViewName ? active : inactive;\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light rounded\">\n      <div className=\"navbar-collapse justify-content-md-center\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item active\">\n            <span className=\"nav-link\">\n              <Link\n                to={Config.getUrl(`/user/${userId}/stories`)}\n                className={macro(\"story\")}\n              >\n                Stories\n              </Link>\n            </span>\n          </li>\n          <li className=\"nav-item\">\n            <span className=\"nav-link\">\n              <Link\n                to={Config.getUrl(`/user/${userId}/competitions`)}\n                className={macro(\"competition\")}\n              >\n                Competitions\n              </Link>\n            </span>\n          </li>\n          <li className=\"nav-item\">\n            <span className=\"nav-link\">\n              <Link\n                to={Config.getUrl(`/user/${userId}/rules`)}\n                className={macro(\"rules\")}\n              >\n                Rules\n              </Link>\n            </span>\n          </li>\n          <li className=\"nav-item\">\n            <span className=\"nav-link\">\n              <Link\n                to={Config.getUrl(`/user/${userId}/comments`)}\n                className={macro(\"comments\")}\n              >\n                Comments\n              </Link>\n            </span>\n          </li>\n          <li className=\"nav-item\">\n            <span className=\"nav-link\">\n              <Link\n                to={Config.getUrl(`/user/${userId}/likes`)}\n                className={macro(\"likes\")}\n              >\n                Likes\n              </Link>\n            </span>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n","import React, { Component } from \"react\";\nimport Octicon, { Eye } from \"@primer/octicons-react\";\n\nimport Config from \"../../Config\";\n\nexport default class CreateUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      data: null,\n      auth: null\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(field, event) {\n    const obj = {};\n    obj[field] = event.target.value;\n    this.setState(obj);\n  }\n\n  async handleSubmit(event) {\n    // Prevent from refreshing\n    event.preventDefault();\n\n    // Send data to the server\n    const response = await fetch(Config.getApi(\"/users\"), {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        email: this.state.email,\n        password: this.state.password\n      })\n    });\n\n    const data = await response.json();\n    const auth = {\n      authorization: response.headers.get(\"authorization\"),\n      \"x-access-token\": response.headers.get(\"x-access-token\")\n    };\n    this.setState({ data, auth });\n    console.log(\"Register Request\", JSON.stringify(this.state));\n\n    // Redirect\n    window.location.href = Config.getUrl(`/?a=${auth.authorization}`);\n  }\n\n  render() {\n    return (\n      <div className=\"App-sub-section\">\n        <div className=\"container\">\n          <h1>Create a new account</h1>\n\n          <form onSubmit={this.handleSubmit}>\n            <fieldset className=\"form-group\">\n              <label>Username:</label>\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <div className=\"input-group-text\">@</div>\n                </div>\n                <input\n                  value={this.state.username}\n                  onChange={this.handleChange.bind(this, \"username\")}\n                  id=\"username\"\n                  type=\"text\"\n                  name=\"title\"\n                  className=\"form-control\"\n                  placeholder=\"Enter your username\"\n                  required\n                />\n              </div>\n            </fieldset>\n            <fieldset className=\"form-group\">\n              <label>Email:</label>\n              <input\n                value={this.state.email}\n                onChange={this.handleChange.bind(this, \"email\")}\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                className=\"form-control\"\n                placeholder=\"Enter your email address\"\n                required\n              />\n            </fieldset>\n            <fieldset className=\"form-group\">\n              <label>Password:</label>\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <div className=\"input-group-text\">\n                    <Octicon icon={Eye} />\n                  </div>\n                </div>\n                <input\n                  value={this.state.password}\n                  onChange={this.handleChange.bind(this, \"password\")}\n                  id=\"password\"\n                  type=\"password\"\n                  name=\"password\"\n                  className=\"form-control\"\n                  placeholder=\"Enter your password\"\n                  required\n                />\n              </div>\n              <small id=\"passwordHelpInline\" className=\"text-muted\">\n                Must be 8-20 characters long.\n              </small>\n            </fieldset>\n            <fieldset className=\"form-group\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                name=\"rules\"\n                required\n              />\n              <label className=\"form-check-label\">\n                Accept rules and email subscription\n              </label>\n              <small id=\"passwordHelpInline\" className=\"text-muted\">\n                No commercial offer will be send to you, just regular usage.\n              </small>\n            </fieldset>\n            <fieldset className=\"form-group text-center\">\n              <input\n                type=\"submit\"\n                value=\"Create account\"\n                className=\"btn btn-primary\"\n              />\n            </fieldset>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import Context from \"../Context\";\n\nexport class QSParser {\n  constructor() {\n    if (window.location.search) {\n      this.query = new URLSearchParams(window.location.search);\n    }\n  }\n\n  setAuth() {\n    if (!this.query) {\n      return;\n    }\n\n    const token = this.query.get(\"a\");\n    if (!token || token === \"undefined\") {\n      return;\n    }\n\n    const auth = {\n      authorization: token,\n      \"x-access-token\": token\n    };\n    Context.set(\"auth\", auth);\n  }\n}\n\nexport default new QSParser();\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Config from \"../../Config\";\nimport Context from \"../../Context\";\nimport QSParser from \"../../utils/QueryStringParser\";\n\nexport default class StoryReader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      story: {},\n      isLoading: false,\n      error: null,\n      storyId: props.storyId\n    };\n\n    QSParser.setAuth();\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n    try {\n      const response = await fetch(\n        Config.getApi(`/stories/${this.state.storyId}`, {\n          method: \"GET\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            ...(Context.get(\"auth\") || {})\n          }\n        })\n      );\n      if (!response.ok) {\n        console.error(\"Failed to load story\", response);\n        throw new Error(\"Something went wrong...\");\n      }\n      const story = await response.json();\n      this.setState({ story, isLoading: false });\n      return;\n    } catch (error) {\n      this.setState({ error, isLoading: false });\n    }\n  }\n\n  render() {\n    const { story, isLoading, error } = this.state;\n\n    if (error) {\n      return (\n        <section className=\"App-section\">\n          <h1>An error occurred: {error && error.message}</h1>\n        </section>\n      );\n    }\n\n    if (isLoading || !story) {\n      return (\n        <section className=\"App-section\">\n          <h1>Loading story...</h1>\n        </section>\n      );\n    }\n\n    const editLink = (\n      <Link\n        to={Config.getUrl(`/story/${story.id}/edit`)}\n        className=\"btn btn-lg btn-block btn-primary\"\n      >\n        Edit the story\n      </Link>\n    );\n\n    const connectLink = (\n      <Link\n        to={Config.getUrl(`/login`)}\n        className=\"btn btn-lg btn-block btn-primary\"\n      >\n        Connect to edit this story\n      </Link>\n    );\n\n    const date = new Date(story.lastEditedAt || story.createdAt);\n    return (\n      <div className=\"App-sub-section\">\n        <div className=\"container\">\n          <div className=\"card panel-default\">\n            <div className=\"card-header text-center\">\n              <b>{story.name}</b> — by{\" \"}\n              <Link to={Config.getUrl(`/user/${story.ownerId}`)}>\n                {story.ownerId}\n              </Link>{\" \"}\n              — {date.toDateString()}\n            </div>\n            <div className=\"card-body\">\n              {story.content || \"No content for now\"}\n            </div>\n            <div className=\"card-footer\">\n              {Context.has(\"auth\") ? editLink : connectLink}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Octicon, { ArrowLeft, Fold } from \"@primer/octicons-react\";\n\nimport Config from \"../../Config\";\nimport Context from \"../../Context\";\n\nexport default class StoryReader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Format\n      isLoading: false,\n      formIsHidden: false,\n      error: null,\n      // data\n      storyId: props.storyId,\n      ownerId: null,\n      name: null,\n      isPublic: false,\n      isCommentsDisabled: false,\n      description: \"\",\n      content: \"\"\n    };\n\n    this.toggleForm = this.toggleForm.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n    try {\n      const response = await fetch(\n        Config.getApi(`/stories/${this.state.storyId}`, {\n          method: \"GET\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            ...(Context.get(\"auth\") || {})\n          }\n        })\n      );\n      if (!response.ok) {\n        console.error(\"Failed to load story\", response);\n        throw new Error(\"Something went wrong...\");\n      }\n      const story = await response.json();\n      this.setState({ ...story, isLoading: false });\n      return;\n    } catch (error) {\n      this.setState({ error, isLoading: false });\n    }\n  }\n\n  toggleForm() {\n    this.setState({ formIsHidden: !this.state.formIsHidden });\n  }\n\n  handleChange(field, event) {\n    this.setState({\n      [field]: event.target.value\n    });\n  }\n\n  handleCheck(field, event) {\n    this.setState({\n      [field]: event.target.checked\n    });\n  }\n\n  async handleSubmit(event) {\n    // Prevent from refreshing\n    event.preventDefault();\n\n    // Send data to the server\n    const response = await fetch(\n      Config.getApi(`/stories/${this.state.storyId}`),\n      {\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          ...(Context.get(\"auth\") || {})\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          description: this.state.description,\n          isPublic: this.state.isPublic,\n          isCommentsDisabled: !this.state.isCommentsDisabled,\n          content: this.state.content\n        })\n      }\n    );\n\n    if (!response.ok) {\n      console.error(\"Failed to update story\", response);\n      throw new Error(response.statusText);\n    }\n\n    const data = await response.json();\n\n    // Redirect\n    window.location.href = Config.getUrl(\n      `/story/${data.id}/?a=${(Context.get(\"auth\") || {}).authorization}`\n    );\n  }\n\n  render() {\n    const { storyId, isLoading, name, error } = this.state;\n\n    if (error) {\n      return (\n        <div className=\"App-section\">\n          <h1>An error occurred, sorry: {error.message}</h1>\n        </div>\n      );\n    }\n\n    if (isLoading || !storyId || !name) {\n      return (\n        <div className=\"App-section\">\n          <h1>Loading story</h1>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App-sub-section\">\n        <div className=\"container\">\n          <div>\n            <h1>\n              Edit{\" \"}\n              <Link to={Config.getUrl(`/story/${storyId}`)}>\n                <i>{this.state.name}</i>\n              </Link>{\" \"}\n              by{\" \"}\n              <Link to={Config.getUrl(`/user/${this.state.ownerId}`)}>\n                {this.state.ownerId}\n              </Link>{\" \"}\n            </h1>\n\n            {!this.state.formIsHidden && <StoryEditorForm binder={this} />}\n          </div>\n\n          <div>\n            <div className=\"card panel-default\">\n              <div className=\"card-header text-center\">\n                <button className=\"btn btn-primary\" onClick={this.toggleForm}>\n                  <Octicon icon={Fold} /> Toggle story properties\n                </button>{\" \"}\n                <Link\n                  className=\"btn btn-primary\"\n                  to={Config.getUrl(`/story/${storyId}`)}\n                >\n                  <Octicon icon={ArrowLeft} /> Back\n                </Link>\n              </div>\n              <div className=\"card-body\">\n                <textarea\n                  form=\"storyEditor\"\n                  name=\"content\"\n                  className=\"form-control\"\n                  placeholder=\"Write your story here\"\n                  rows=\"3\"\n                  value={this.state.content}\n                  onChange={this.handleChange.bind(this, \"content\")}\n                />\n              </div>\n              <div className=\"card-footer\">\n                <button\n                  form=\"storyEditor\"\n                  type=\"button\"\n                  className=\"btn btn-lg btn-block btn-primary\"\n                  placeholder=\"Edit the story\"\n                  onClick={this.handleSubmit}\n                >\n                  Edit the story\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction StoryEditorForm({ binder }) {\n  return (\n    <form id=\"storyEditor\" onSubmit={binder.handleSubmit}>\n      <fieldset className=\"form-group\">\n        <label htmlFor=\"title\">Title:</label>\n        <input\n          id=\"title\"\n          type=\"text\"\n          name=\"title\"\n          className=\"form-control\"\n          placeholder=\"Enter title\"\n          value={binder.state.name}\n          onChange={binder.handleChange.bind(binder, \"name\")}\n        />\n      </fieldset>\n      <fieldset className=\"form-group\">\n        <label>Description:</label>\n        <textarea\n          name=\"description\"\n          className=\"form-control\"\n          placeholder=\"Write a description for your story\"\n          rows=\"3\"\n          value={binder.state.description}\n          onChange={binder.handleChange.bind(binder, \"description\")}\n        />\n      </fieldset>\n      <fieldset className=\"form-group\">\n        <input\n          className=\"form-check-input\"\n          type=\"checkbox\"\n          name=\"isPublic\"\n          value={binder.state.isPublic}\n          onChange={binder.handleCheck.bind(binder, \"isPublic\")}\n        />\n        <label className=\"form-check-label\">Public Mode</label>\n      </fieldset>\n      <fieldset className=\"form-group\">\n        <input\n          className=\"form-check-input\"\n          type=\"checkbox\"\n          name=\"commentsEnabled\"\n          value={binder.state.isCommentsDisabled}\n          onChange={binder.handleCheck.bind(binder, \"isCommentsDisabled\")}\n        />\n        <label className=\"form-check-label\">Comments enabled</label>\n      </fieldset>\n      {/* TODO fix me\n        <fieldset className=\"form-group\">\n          <label>Rules:</label>\n          <RuleChoices userId={binder.props.userId} />\n        </fieldset>\n        <fieldset className=\"form-group\">\n          <label>Tags:</label>\n          <TagChoices userId={binder.props.userId} />\n        </fieldset>\n      */}\n      <fieldset className=\"form-group text-center\">\n        <input type=\"submit\" value=\"Edit story\" className=\"btn btn-primary\" />\n      </fieldset>\n    </form>\n  );\n}\n","import React from \"react\";\n\nimport Stories from \"./lists/Stories\";\n\nexport default function HomePage() {\n  return <Stories />;\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport Config from \"./Config\";\nimport Connect from \"./components/Connect\";\nimport CreateView from \"./components/creates/CreateView\";\nimport SearchPage from \"./components/SearchPage\";\nimport Menu from \"./components/Menu\";\nimport UserPage from \"./components/UserPage\";\nimport CreateUser from \"./components/creates/CreateUser\";\nimport StoryReader from \"./components/readers/StoryReader\";\nimport StoryEditor from \"./components/editor/StoryEditor\";\nimport HomePage from \"./components/HomePage\";\nimport QSParser from \"./utils/QueryStringParser\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userId: \"\",\n    };\n\n    QSParser.setAuth();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Menu />\n\n          <Switch>\n            <Route path={Config.getUrl(\"/about\")} component={AboutView} />\n            <Route path={Config.getUrl(\"/create\")} component={CreateView} />\n            <Route path={Config.getUrl(\"/search\")} component={SearchPage} />\n            <Route path={Config.getUrl(\"/profile\")}>\n              <UserPage userId={this.state.userId} />\n            </Route>\n            <Route path={Config.getUrl(\"/user/:userId\")} component={({ match }) => (<UserPage userId={match.params.userId}/>)} />\n            <Route path={Config.getUrl(\"/login\")} component={Connect} />\n            <Route path={Config.getUrl(\"/register\")} component={CreateUser} />\n            <Route path={Config.getUrl(\"/story/:id/edit\")} component={({ match }) => (<StoryEditor storyId={match.params.id} />)} />\n            <Route path={Config.getUrl(\"/story/:id\")} component={({ match }) => (<StoryReader storyId={match.params.id} />)} />\n            <Route exact path={Config.getUrl(\"/\")} component={HomePage} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nfunction AboutView(params) {\n  return (\n    <section className=\"App-section\">\n      <h1>Writtter</h1>\n      <h4>The place to play with words and stories, together.</h4>\n      <p>\n        Created by <a href=\"https://g-ongenae.github.io/\">Guillaume Ongenae</a>\n      </p>\n    </section>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
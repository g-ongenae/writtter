{"version":3,"sources":["Config.js","components/Connect.js","components/creates/TagChoices.js","components/creates/RuleChoices.js","components/creates/CreateCompetition.js","components/creates/CreateRule.js","components/creates/CreateStory.js","components/creates/CreateView.js","components/SearchPage.js","components/Menu.js","components/lists/Stories.js","components/lists/Competitions.js","components/lists/Comments.js","components/UserPage.js","components/creates/CreateUser.js","components/readers/StoryReader.js","components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["local","process","this","FRONT_BASE_URL","API_BASE_URL","url","Connect","props","state","username","password","handleChange","bind","handleSubmit","field","event","obj","target","value","setState","preventDefault","console","log","fetch","Config","getApi","method","headers","Accept","body","JSON","stringify","response","window","location","href","getUrl","className","id","type","name","placeholder","onChange","required","Component","TagChoices","tags","isLoading","ok","Error","json","data","error","tagsChoices","map","tag","multiple","RuleChoices","rules","rulesChoices","rule","CreateCompetition","description","finishDate","htmlFor","rows","DatePicker","competition","defaultChecked","userId","binder","d","Date","min","getDate","getMonth","getUTCFullYear","data-date-format","icon","Calendar","CreateRule","CreateStory","isPublic","isCommentsDisabled","ownerId","CreateView","Menu","activeViewName","pathname","path","macro","propName","to","SearchPage","SearchBar","SearchResults","Search","results","Centered","text","Array","isEmpty","items","item","index","SearchResultItem","lastEditedAt","logButtons","loggedIn","push","aria-label","Stories","Competitions","Comments","UserPage","liked","CreateUser","email","onSubmit","StoryReader","story","storyId","isArray","length","message","_isMounted","date","createdAt","toDateString","content","HomePage","params","App","component","AboutView","match","exact","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.edb6e1cd.chunk.js","sourcesContent":["\nexport class Config {\n  constructor(local = process.env.NODE_ENV) {\n    this.FRONT_BASE_URL = local === \"development\" ? \"\" : \"/writtter\";\n    this.API_BASE_URL = \"https://writtter.herokuapp.com\"; // local === \"development\" ? \"http://localhost:5050\" :\n  }\n\n  /**\n   * Return the full path of the API request\n   * @param {URI} url the path to target.\n   */\n  getApi(url = \"\") {\n    return `${this.API_BASE_URL}${url}`;\n  }\n\n  /**\n   * Return the full path of the front view url\n   * @param {URI} url the path to target.\n   */\n  getUrl(url = \"\") {\n    return `${this.FRONT_BASE_URL}${url}`;\n  }\n}\n\nexport default new Config();","import React, { Component } from \"react\";\n\nimport Config from \"../Config\";\n\nexport default class Connect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(field, event) {\n    const obj = {};\n    obj[field] = event.target.value;\n    this.setState(obj);\n  }\n\n  async handleSubmit(event) {\n    // Prevent from refreshing\n    event.preventDefault();\n\n    console.log(\"Event\", event);\n    // Send data to the server\n    const response = await fetch(Config.getApi(\"/users/login\"), {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password\n      })\n    });\n\n    console.log(\"response\", response);\n\n    // Redirect\n    window.location.href = Config.getUrl(\"/\");\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1> Connect </h1>\n        <form>\n          <fieldset className=\"form-group\">\n            <label>Username:</label>\n            <input\n              id=\"username\"\n              type=\"text\"\n              name=\"title\"\n              className=\"form-control\"\n              placeholder=\"Enter your username\"\n              value={this.state.username}\n              onChange={this.handleChange.bind(this, \"username\")}\n              required\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Password:</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              className=\"form-control\"\n              placeholder=\"Enter your password\"\n              value={this.state.password}\n              onChange={this.handleChange.bind(this, \"password\")}\n              required\n            />\n          </fieldset>\n          <fieldset className=\"form-group text-center\">\n            <input type=\"submit\" value=\"Log in\" className=\"btn btn-primary\" />\n          </fieldset>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\n\nexport default class TagChoices extends Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      tags: [],\n      isLoading: false\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n\n    try {\n      const response = await fetch(Config.getApi(\"/tags\"));\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch tags\");\n      }\n\n      const data = await response.json();\n      this.setState({ tags: data.tags, isLoading: false });\n    } catch (error) {\n      this.setState({ error, isLoading: false });\n    }\n  }\n\n  render() {\n    const tagsChoices = this.state.tags.map(tag => (\n      <option value={tag.id}>{tag.name}</option>\n    ));\n\n    return (\n      <select name=\"tags\" className=\"form-control\" multiple>\n        {tagsChoices}\n      </select>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\n\nexport default class RuleChoices extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      rules: [],\n      isLoading: false\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n\n    try {\n      const response = await fetch(Config.getApi(\"/rules\"));\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch tags\");\n      }\n\n      const data = await response.json();\n      this.setState({ tags: data.tags, isLoading: false });\n    } catch (error) {\n      this.setState({ error, isLoading: false });\n    }\n  }\n\n  render() {\n    const rulesChoices = this.state.rules.map(rule => (\n      <option value={rule.id}>{rule.name}</option>\n    ));\n\n    return (\n      <select name=\"rules\" className=\"form-control\" multiple>\n        {rulesChoices}\n      </select>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Octicon, { Calendar } from \"@primer/octicons-react\";\n\nimport TagChoices from \"./TagChoices\";\nimport RuleChoices from \"./RuleChoices\";\n\nexport default class CreateCompetition extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      name: \"\",\n      description: \"\",\n      finishDate: \"\"\n    };\n  }\n\n  handleChange(field, event) {\n    const obj = {};\n    obj[field] = event.target.value;\n    this.setState(obj);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Create a new competition</h1>\n\n        <form>\n          <fieldset className=\"form-group\">\n            <label htmlFor=\"title\">Title:</label>\n            <input\n              value={this.state.name}\n              onChange={this.handleChange.bind(this, \"name\")}\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              className=\"form-control\"\n              placeholder=\"Enter title\"\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Description:</label>\n            <textarea\n              value={this.state.description}\n              onChange={this.handleChange.bind(this, \"description\")}\n              name=\"description\"\n              className=\"form-control\"\n              placeholder=\"Write a description for your story\"\n              rows=\"3\"\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Due date:</label>\n            <DatePicker competition={this} />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              name=\"isPublic\"\n            />\n            <label className=\"form-check-label\">Public Mode</label>\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              name=\"commentsEnabled\"\n              defaultChecked\n            />\n            <label className=\"form-check-label\">Comments enabled</label>\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Rules:</label>\n            <RuleChoices userId={this.props.userId} binder={this} />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Tags:</label>\n            <TagChoices userId={this.props.userId} binder={this} />\n          </fieldset>\n          <fieldset className=\"form-group text-center\">\n            <input\n              type=\"submit\"\n              value=\"Create competition\"\n              className=\"btn btn-primary\"\n            />\n          </fieldset>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction DatePicker({ competition }) {\n  const d = new Date();\n  const min = `${d.getDate()}/${d.getMonth()}/${d.getUTCFullYear()}`;\n\n  return (\n    <div className=\"input-group date\">\n      <input\n        value={competition.state.finishDate}\n        onChange={competition.handleChange.bind(competition, \"finishDate\")}\n        className=\"form-control\"\n        data-date-format=\"mm/dd/yyyy\"\n        type=\"date\"\n        min={min}\n      />\n      <span className=\"input-group-append\">\n        <span className=\"input-group-text\">\n          <Octicon icon={Calendar} />\n        </span>\n      </span>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nimport TagChoices from \"./TagChoices\";\n\nexport default class CreateRule extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Create a new rule</h1>\n\n        <form>\n          <fieldset className=\"form-group\">\n            <label htmlFor=\"title\">Title:</label>\n            <input\n              id=\"title\"\n              type=\"text\"\n              name=\"title\"\n              className=\"form-control\"\n              placeholder=\"Enter title\"\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Description:</label>\n            <textarea\n              name=\"description\"\n              className=\"form-control\"\n              placeholder=\"Write a description for your story\"\n              rows=\"3\"\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              name=\"isPublic\"\n            />\n            <label className=\"form-check-label\">Public Mode</label>\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Tags:</label>\n            <TagChoices userId={this.props.userId} />\n          </fieldset>\n          <fieldset className=\"form-group text-center\">\n            <input\n              type=\"submit\"\n              value=\"Create rule\"\n              className=\"btn btn-primary\"\n            />\n          </fieldset>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\nimport TagChoices from \"./TagChoices\";\nimport RuleChoices from \"./RuleChoices\";\n\nexport default class CreateStory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      isPublic: false,\n      isCommentsDisabled: false,\n      description: '',\n      ownerId: 1 // TODO fix me\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(field, event) {\n    const obj = {};\n    obj[field] = event.target.value;\n    this.setState(obj);\n  }\n\n  async handleSubmit(event) {\n    // Prevent from refreshing\n    event.preventDefault();\n\n    console.log(\"Event\", event);\n    // Send data to the server\n    const response = await fetch(Config.getApi(\"/stories\"), {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        ownerId: this.state.ownerId,\n        name: this.state.name,\n        description: this.state.description,\n        isPublic: this.state.isPublic,\n        isCommentsDisabled: !this.state.isCommentsDisabled,\n      })\n    });\n\n    console.log(\"response\", response);\n\n    // Redirect\n    window.location.href = Config.getUrl(\"/\");\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Create a new story</h1>\n\n        <form>\n          <fieldset className=\"form-group\">\n            <label htmlFor=\"title\">Title:</label>\n            <input\n              id=\"title\"\n              type=\"text\"\n              name=\"title\"\n              className=\"form-control\"\n              placeholder=\"Enter title\"\n              value={this.state.name}\n              onChange={this.handleChange.bind(this, \"name\")}\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Description:</label>\n            <textarea\n              name=\"description\"\n              className=\"form-control\"\n              placeholder=\"Write a description for your story\"\n              rows=\"3\"\n              value={this.state.description}\n              onChange={this.handleChange.bind(this, \"description\")}\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              name=\"isPublic\"\n              value={this.state.isPublic}\n              onChange={this.handleChange.bind(this, \"isPublic\")}\n            />\n            <label className=\"form-check-label\">Public Mode</label>\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              name=\"commentsEnabled\"\n              defaultChecked\n              value={this.state.isCommentsDisabled}\n              onChange={this.handleChange.bind(this, \"isCommentsDisabled\")}\n            />\n            <label className=\"form-check-label\">Comments enabled</label>\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Rules:</label>\n            <RuleChoices userId={this.props.userId} />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Tags:</label>\n            <TagChoices userId={this.props.userId} />\n          </fieldset>\n          <fieldset className=\"form-group text-center\">\n            <input\n              type=\"submit\"\n              value=\"Create story\"\n              className=\"btn btn-primary\"\n            />\n          </fieldset>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n\nimport Config from \"../../Config\";\nimport CreateCompetition from \"./CreateCompetition\";\nimport CreateRule from \"./CreateRule\";\nimport CreateStory from \"./CreateStory\";\n\nexport default function CreateView(props) {\n  return (\n    <Router>\n      <Menu activeViewName={props.location.pathname} />\n\n      <Switch>\n        <Route path={Config.getUrl(\"/create/story\")}>\n          <CreateStory />\n        </Route>\n        <Route path={Config.getUrl(\"/create/competition\")}>\n          <CreateCompetition />\n        </Route>\n        <Route path={Config.getUrl(\"/create/rule\")}>\n          <CreateRule />\n        </Route>\n        <Route path={Config.getUrl(\"/create\")}>\n          <CreateStory />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\n/**\n * @todo fix button not changing color when clicked (use onClick event)\n * @param {string} activeViewName\n */\nfunction Menu({ activeViewName }) {\n  const active = \"btn btn-lg btn-block btn-outline-primary\";\n  const inactive = \"btn btn-lg btn-block btn-primary\";\n  const macro = propName =>\n    `/create/${propName}` === activeViewName ? active : inactive;\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light rounded\">\n      <div className=\"navbar-collapse justify-content-md-center\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item active\">\n            <Link className=\"nav-link\" to={Config.getUrl(\"/create/story\")}>\n              <button type=\"button\" className={macro(\"story\")}>\n                Story\n              </button>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to={Config.getUrl(\"/create/competition\")}\n            >\n              <button type=\"button\" className={macro(\"competition\")}>\n                Competition\n              </button>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={Config.getUrl(\"/create/rule\")}>\n              <button type=\"button\" className={macro(\"rule\")}>\n                Rule\n              </button>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n","import React, { Component } from \"react\";\nimport Octicon, { Search } from \"@primer/octicons-react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nexport default class SearchPage extends Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <SearchBar />\n          <SearchResults />\n        </Router>\n      </div>\n    );\n  }\n}\n\nfunction SearchBar() {\n  return (\n    <div className=\"container\">\n      <h1> Search Page </h1>\n      <form className=\"form-row\">\n        <div className=\"col-sm-2\"></div>\n        <fieldset className=\"col-sm-7 form-group\">\n          <div className=\"input-group\">\n            <div className=\"input-group-prepend\">\n              <div className=\"input-group-text\">\n                <Octicon icon={Search} />\n              </div>\n            </div>\n            <input\n              id=\"search\"\n              type=\"search\"\n              name=\"search\"\n              className=\"form-control\"\n              required\n            />\n          </div>\n        </fieldset>\n        <fieldset className=\"col-sm-2 form-group\">\n          <input type=\"submit\" value=\"Search\" className=\"btn btn-primary\" />\n        </fieldset>\n      </form>\n    </div>\n  );\n}\n\nfunction SearchResults({ results }) {\n  // waiting for search to be made\n  if (!results) {\n    return <Centered text=\"Make a search\" />;\n  }\n\n  // or a funny drawing (not found 404)\n  if (Array.isEmpty(results)) {\n    return <Centered text=\"No search results found\" />;\n  }\n\n  // Search results\n  const items = results.map((item, index) => (\n    <SearchResultItem index={index} item={item} />\n  ));\n  return <div className=\"container\">{items}</div>;\n}\n\nfunction SearchResultItem({ item, index }) {\n  return (\n    <div className=\"panel panel-default\">\n      <div className=\"panel-heading\">\n        {item.name} — by {item.ownerId} — {item.lastEditedAt}\n      </div>\n      <div className=\"panel-body\">{item.description}</div>\n      <div className=\"panel-footer\">\n        <Link to={`/stories/${item.id}`}>Read the story</Link>\n        <Link to={`/stories/${item.id}/edit`}>Edit the story</Link>\n      </div>\n    </div>\n  );\n}\n\nfunction Centered({ text }) {\n  return (\n    <div className=\"jumbotron d-flex align-items-center\">\n      <div className=\"container text-center\">\n        <h2>{text}</h2>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Config from \"../Config\";\n\nexport default function Menu({ loggedIn }) {\n  const logButtons = [];\n  // TODO simplify\n  if (!loggedIn) {\n    logButtons.push(\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to={Config.getUrl(\"/login\")}>\n          Log in\n        </Link>\n      </li>\n    );\n    logButtons.push(\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to={Config.getUrl(\"/register\")}>\n          Register\n        </Link>\n      </li>\n    );\n  } else {\n    logButtons.push(\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to={Config.getUrl(\"/profile\")}>\n          Profile\n        </Link>\n      </li>\n    );\n    logButtons.push(\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to={Config.getUrl(\"/logout\")}>\n          Log out\n        </Link>\n      </li>\n    );\n  }\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to={Config.getUrl(\"/\")}>\n        {\" \"}\n        Writtter{\" \"}\n      </Link>\n      {/* TODO fix me \n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button> */}\n\n      <div\n        className=\"collapse navbar-collapse show\"\n        id=\"navbarSupportedContent\"\n      >\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={Config.getUrl(\"/about\")}>\n              About\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={Config.getUrl(\"/search\")}>\n              Search\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={Config.getUrl(\"/create\")}>\n              Create\n            </Link>\n          </li>\n          {logButtons[0]}\n          {logButtons[1]}\n        </ul>\n        <form className=\"form-inline my-2 my-lg-0\">\n          <input\n            className=\"form-control mr-sm-2\"\n            type=\"search\"\n            placeholder=\"Search\"\n            aria-label=\"Search\"\n          />\n          <button\n            className=\"btn btn-outline-success my-2 my-sm-0\"\n            type=\"submit\"\n          >\n            Search\n          </button>\n        </form>\n      </div>\n    </nav>\n  );\n}\n","import React, { Component } from \"react\";\n\nexport default class Stories extends Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"Hello\");\n  }\n  render() {\n    return <h1>Hello here are the stories</h1>;\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Competitions extends Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"Hello\");\n  }\n\n  render() {\n    return <h1>Hello here are the competitions</h1>;\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Comments extends Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"Hello\");\n  }\n\n  render() {\n    return <h1>Hello here are the comments</h1>;\n  }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n\nimport Config from \"../Config\";\nimport Stories from \"./lists/Stories\";\nimport Competitions from \"./lists/Competitions.js\";\nimport Comments from \"./lists/Comments\";\n\nexport default class UserPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: false,\n      userId: 0\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <div>\n            {/* Username: {username = \"Guillaume\"} */}\n            {/* <img> {userimage = \"hello\"} </img> */}\n          </div>\n          <Link to={Config.getUrl(`/user/${this.state.userId}/stories`)}>\n            Stories\n          </Link>\n          <Link to={Config.getUrl(`/user/${this.state.userId}/competitions`)}>\n            Competitions\n          </Link>\n          <Link to={Config.getUrl(`/user/${this.state.userId}/likes`)}>\n            Likes\n          </Link>\n          <Link to={Config.getUrl(`/user/${this.state.userId}/comments`)}>\n            Comments\n          </Link>\n\n          <Switch>\n            <Route path={Config.getUrl(\"/user/:userId/stories\")}>\n              <Stories liked={false} userId={this.state.userId} />\n            </Route>\n            <Route path={Config.getUrl(\"/user/:userId/competitions\")}>\n              <Competitions userId={this.state.userId} />\n            </Route>\n            <Route path={Config.getUrl(\"/user/:userId/likes\")}>\n              <Stories liked={true} userId={this.state.userId} />\n            </Route>\n            <Route path={Config.getUrl(\"/user/:userId/comments\")}>\n              <Comments userId={this.state.userId} />\n            </Route>\n            <Route path={Config.getUrl(\"/user/:userId\")}>\n              <Stories liked={false} userId={this.state.userId} />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\n\nexport default class CreateUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(field, event) {\n    const obj = {};\n    obj[field] = event.target.value;\n    this.setState(obj);\n  }\n\n  async handleSubmit(event) {\n    // Prevent from refreshing\n    event.preventDefault();\n\n    console.log(\"Event\", event);\n    // Send data to the server\n    const response = await fetch(Config.getApi(\"/users\"), {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        email: this.state.email,\n        password: this.state.password\n      })\n    });\n\n    console.log(\"response\", response);\n\n    // Redirect\n    window.location.href = Config.getUrl(\"/\");\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Create a new account</h1>\n\n        <form onSubmit={this.handleSubmit}>\n          <fieldset className=\"form-group\">\n            <label>Username:</label>\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <div className=\"input-group-text\">@</div>\n              </div>\n              <input\n                value={this.state.username}\n                onChange={this.handleChange.bind(this, \"username\")}\n                id=\"username\"\n                type=\"text\"\n                name=\"title\"\n                className=\"form-control\"\n                placeholder=\"Enter your username\"\n                required\n              />\n            </div>\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Email:</label>\n            <input\n              value={this.state.email}\n              onChange={this.handleChange.bind(this, \"email\")}\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              className=\"form-control\"\n              placeholder=\"Enter your email address\"\n              required\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Password:</label>\n            <input\n              value={this.state.password}\n              onChange={this.handleChange.bind(this, \"password\")}\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              className=\"form-control\"\n              placeholder=\"Enter your password\"\n              required\n            />\n            <small id=\"passwordHelpInline\" className=\"text-muted\">\n              Must be 8-20 characters long.\n            </small>\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              name=\"rules\"\n              required\n            />\n            <label className=\"form-check-label\">\n              Accept rules and email subscription\n            </label>\n            <small id=\"passwordHelpInline\" className=\"text-muted\">\n              No commercial offer will be send to you, just regular usage.\n            </small>\n          </fieldset>\n          <fieldset className=\"form-group text-center\">\n            <input\n              type=\"submit\"\n              value=\"Create account\"\n              className=\"btn btn-primary\"\n            />\n          </fieldset>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nimport Config from \"../../Config\";\n\nexport default class StoryReader extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      story: {},\n      isLoading: false,\n      error: null,\n      storyId: props.storyId\n    };\n  }\n\n  async componentWillMount() {\n    this.setState({ isLoading: true });\n    try {\n      const response = await fetch(\n        Config.getApi(`/stories/${this.state.storyId}`)\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong...\");\n      }\n      const data = await response.json();\n      if (!Array.isArray(data) || data.length === 0) {\n        this.setState({ error: { message: \"Not found\" }, isLoading: false });\n        this._isMounted = true;\n        return;\n      }\n\n      this.setState({ story: data[0], isLoading: false });\n      this._isMounted = true;\n      return;\n    } catch (error) {\n      this.setState({ error, isLoading: false });\n      this._isMounted = true;\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const { story, isLoading, error } = this.state;\n\n    if (error) {\n      return <p>An error occurred, sorry: {error.message}</p>;\n    }\n\n    if (isLoading || !story) {\n      return <div> Loading story </div>;\n    }\n\n    const date = new Date(story.lastEditedAt || story.createdAt);\n    return (\n      <Router>\n        <div className=\"container\">\n          <div className=\"card panel-default\">\n            <div className=\"card-header text-center\">\n              <b>{story.name}</b> — by{\" \"}\n              <Link to={`/user/${story.ownerId}=`}>{story.ownerId}</Link> —{\" \"}\n              {date.toDateString()}\n            </div>\n            <div className=\"card-body\">\n              {story.content || \"No content for now\"}\n            </div>\n            <div className=\"card-footer\">\n              <Link to={`/stories/${story.id}/edit`}>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-lg btn-block btn-primary\"\n                >\n                  Edit the story\n                </button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class HomePage extends Component {\n  constructor(params) {\n    super(params);\n    this.state = {};\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <section className=\"App-section\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        <h1>Writtter</h1>\n        <h4>The place to play with words and stories, together.</h4>\n        <p>Coming Soon</p>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport Config from \"./Config\";\nimport Connect from \"./components/Connect\";\nimport CreateView from \"./components/creates/CreateView\";\nimport SearchPage from \"./components/SearchPage\";\nimport Menu from \"./components/Menu\";\nimport UserPage from \"./components/UserPage\";\nimport CreateUser from \"./components/creates/CreateUser\";\nimport StoryReader from \"./components/readers/StoryReader\";\nimport HomePage from \"./components/HomePage\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      userId: '',\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Menu />\n\n          <Switch>\n            <Route path={Config.getUrl(\"/about\")} component={AboutView} />\n            <Route path={Config.getUrl('/create')} component={CreateView} />\n            <Route path={Config.getUrl('/search')} component={SearchPage} />\n            <Route path={Config.getUrl('/profile')}>\n              <UserPage userId={this.state.userId} />\n            </Route>\n            <Route path={Config.getUrl('/user')} component={UserPage} />\n            <Route path={Config.getUrl('/login')} component={Connect} />\n            <Route path={Config.getUrl('/register')} component={CreateUser} />\n            <Route path=\"/stories/:id\" component={({ match }) => (<StoryReader storyId={match.params.id} />)} />\n            <Route exact path=\"/\" component={HomePage} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nfunction AboutView(params) {\n  return (\n    <section className=\"App-section\">\n      <h1>Writtter</h1>\n      <h4>The place to play with words and stories, together.</h4>\n      <p>\n        Created by <a href=\"https://g-ongenae.github.io/\">Guillaume Ongenae</a>\n      </p>\n    </section>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
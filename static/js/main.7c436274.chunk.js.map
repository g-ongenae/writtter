{"version":3,"sources":["components/Connect.js","components/creates/TagChoices.js","components/creates/RuleChoices.js","components/creates/CreateCompetition.js","components/creates/CreateRule.js","components/creates/CreateStory.js","components/creates/CreateView.js","components/SearchPage.js","components/Menu.js","components/UserPage.js","components/creates/CreateUser.js","components/readers/StoryReader.js","App.js","serviceWorker.js","index.js"],"names":["Connect","state","className","id","type","name","placeholder","required","value","Component","TagChoices","tags","isLoading","this","setState","fetch","response","ok","Error","json","data","error","tagsChoices","map","tag","multiple","RuleChoices","rules","rulesChoices","rule","CreateCompetition","props","description","finishDate","for","onChange","bind","rows","DatePicker","competition","defaultChecked","userId","binder","d","Date","min","getDate","getMonth","getUTCFullYear","data-date-format","icon","Calendar","CreateRule","CreateStory","CreateView","to","path","SearchPage","SearchBar","SearchResults","Search","results","Centered","text","Array","isEmpty","items","item","index","SearchResultItem","ownerId","lastEditedAt","Menu","loginButtons","loggedIn","UserPage","Stories","liked","Competitions","Comments","params","CreateUser","username","email","password","handleChange","handleSubmit","field","event","obj","target","preventDefault","console","log","method","headers","Accept","body","JSON","stringify","window","location","href","onSubmit","StoryReader","story","storyId","_isMounted","message","content","App","then","responseJson","component","match","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7c436274.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Connect extends Component {\n  constructor() {\n    super();\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1> Connect </h1>\n        <form>\n          <fieldset className=\"form-group\">\n            <label>Username:</label>\n            <input\n              id=\"username\"\n              type=\"text\"\n              name=\"title\"\n              className=\"form-control\"\n              placeholder=\"Enter your username\"\n              required\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Password:</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              className=\"form-control\"\n              placeholder=\"Enter your password\"\n              required\n            />\n          </fieldset>\n          <fieldset className=\"form-group text-center\">\n            <input type=\"submit\" value=\"Log in\" className=\"btn btn-primary\" />\n          </fieldset>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nconst API_BASE_URL = \"https://writtter.herokuapp.com\";\n\nexport default class TagChoices extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      tags: [],\n      isLoading: false\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/tags`);\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch tags\");\n      }\n\n      const data = await response.json();\n      this.setState({ tags: data.tags, isLoading: false });\n    } catch (error) {\n      this.setState({ error, isLoading: false });\n    }\n  }\n\n  render() {\n    const tagsChoices = this.state.tags.map(tag => (\n      <option value={tag.id}>{tag.name}</option>\n    ));\n\n    return (\n      <select name=\"tags\" className=\"form-control\" multiple>\n        {tagsChoices}\n      </select>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nconst API_BASE_URL = \"https://writtter.herokuapp.com\";\n\nexport default class RuleChoices extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      rules: [],\n      isLoading: false\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/rules`);\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch tags\");\n      }\n\n      const data = await response.json();\n      this.setState({ tags: data.tags, isLoading: false });\n    } catch (error) {\n      this.setState({ error, isLoading: false });\n    }\n  }\n\n  render() {\n    const rulesChoices = this.state.rules.map(rule => (\n      <option value={rule.id}>{rule.name}</option>\n    ));\n\n    return (\n      <select name=\"rules\" className=\"form-control\" multiple>\n        {rulesChoices}\n      </select>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Octicon, { Calendar } from \"@primer/octicons-react\";\n\nimport TagChoices from \"./TagChoices\";\nimport RuleChoices from \"./RuleChoices\";\n\nexport default class CreateCompetition extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      name: \"\",\n      description: \"\",\n      finishDate: \"\",\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Create a new competition</h1>\n\n        <form>\n          <fieldset className=\"form-group\">\n            <label for=\"title\">Title:</label>\n            <input\n              value={this.state.name}\n              onChange={this.onChange.bind(this, 'name')}\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              className=\"form-control\"\n              placeholder=\"Enter title\"\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Description:</label>\n            <textarea\n              value={this.state.description}\n              onChange={this.onChange.bind(this, 'description')}\n              name=\"description\"\n              className=\"form-control\"\n              placeholder=\"Write a description for your story\"\n              rows=\"3\"\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Due date:</label>\n            <DatePicker competition={this} />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <input className=\"form-check-input\" type=\"checkbox\" name=\"isPublic\" />\n            <label className=\"form-check-label\">Public Mode</label>\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              name=\"commentsEnabled\"\n              defaultChecked\n            />\n            <label className=\"form-check-label\">Comments enabled</label>\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Rules:</label>\n            <RuleChoices userId={this.props.userId} binder={this} />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Tags:</label>\n            <TagChoices userId={this.props.userId} binder={this} />\n          </fieldset>\n          <fieldset className=\"form-group text-center\">\n            <input\n              type=\"submit\"\n              value=\"Create competition\"\n              className=\"btn btn-primary\"\n            />\n          </fieldset>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction DatePicker({ binder }) {\n  const d = new Date();\n  const min = `${d.getDate()}/${d.getMonth()}/${d.getUTCFullYear()}`;\n\n  return (\n    <div className=\"input-group date\">\n      <input\n        value={this.state.finishDate}\n        onChange={this.onChange.bind(binder, 'finishDate')}\n        className=\"form-control\"\n        data-date-format=\"mm/dd/yyyy\"\n        type=\"date\"\n        min={min}\n      />\n      <span className=\"input-group-append\">\n        <span className=\"input-group-text\">\n          <Octicon icon={Calendar} />\n        </span>\n      </span>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nimport TagChoices from \"./TagChoices\";\n\nexport default class CreateRule extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Create a new rule</h1>\n\n        <form>\n          <fieldset className=\"form-group\">\n            <label for=\"title\">Title:</label>\n            <input\n              id=\"title\"\n              type=\"text\"\n              name=\"title\"\n              className=\"form-control\"\n              placeholder=\"Enter title\"\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Description:</label>\n            <textarea\n              name=\"description\"\n              className=\"form-control\"\n              placeholder=\"Write a description for your story\"\n              rows=\"3\"\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <input className=\"form-check-input\" type=\"checkbox\" name=\"isPublic\" />\n            <label className=\"form-check-label\">Public Mode</label>\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Tags:</label>\n            <TagChoices userId={this.props.userId} />\n          </fieldset>\n          <fieldset className=\"form-group text-center\">\n            <input type=\"submit\" value=\"Create rule\" className=\"btn btn-primary\" />\n          </fieldset>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport TagChoices from \"./TagChoices\";\nimport RuleChoices from \"./RuleChoices\";\n\nexport default class CreateStory extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Create a new story</h1>\n\n        <form>\n          <fieldset className=\"form-group\">\n            <label for=\"title\">Title:</label>\n            <input\n              id=\"title\"\n              type=\"text\"\n              name=\"title\"\n              className=\"form-control\"\n              placeholder=\"Enter title\"\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Description:</label>\n            <textarea\n              name=\"description\"\n              className=\"form-control\"\n              placeholder=\"Write a description for your story\"\n              rows=\"3\"\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <input className=\"form-check-input\" type=\"checkbox\" name=\"isPublic\" />\n            <label className=\"form-check-label\">Public Mode</label>\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              name=\"commentsEnabled\"\n              defaultChecked\n            />\n            <label className=\"form-check-label\">Comments enabled</label>\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Rules:</label>\n            <RuleChoices userId={this.props.userId} />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Tags:</label>\n            <TagChoices userId={this.props.userId} />\n          </fieldset>\n          <fieldset className=\"form-group text-center\">\n            <input type=\"submit\" value=\"Create story\" className=\"btn btn-primary\" />\n          </fieldset>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n\nimport CreateCompetition from \"./CreateCompetition\";\nimport CreateRule from \"./CreateRule\";\nimport CreateStory from \"./CreateStory\";\n\nexport default function CreateView() {\n  return (\n    <div>\n      <Router>\n        <Link to=\"/create/story\"> Story </Link>\n        <Link to=\"/create/competition\"> Competition </Link>\n        <Link to=\"/create/rule\"> Rule </Link>\n\n        <Switch>\n          <Route path=\"/create/story\">\n            <CreateStory />\n          </Route>\n          <Route path=\"/create/competition\">\n            <CreateCompetition />\n          </Route>\n          <Route path=\"/create/rule\">\n            <CreateRule />\n          </Route>\n          <Route path=\"/create\">\n            <CreateStory />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport Octicon, { Search } from \"@primer/octicons-react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nexport default class SearchPage extends Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <SearchBar />\n          <SearchResults />\n        </Router>\n      </div>\n    );\n  }\n}\n\nfunction SearchBar() {\n  return (\n    <div className=\"container\">\n      <h1> Search Page </h1>\n      <form className=\"form-row\">\n        <div className=\"col-sm-2\"></div>\n        <fieldset className=\"col-sm-7 form-group\">\n          <div className=\"input-group\">\n            <div className=\"input-group-prepend\">\n              <div className=\"input-group-text\">\n                <Octicon icon={Search} />\n              </div>\n            </div>\n            <input\n              id=\"search\"\n              type=\"search\"\n              name=\"search\"\n              className=\"form-control\"\n              required\n            />\n          </div>\n        </fieldset>\n        <fieldset className=\"col-sm-2 form-group\">\n          <input type=\"submit\" value=\"Search\" className=\"btn btn-primary\" />\n        </fieldset>\n      </form>\n    </div>\n  );\n}\n\nfunction SearchResults({ results }) {\n  // waiting for search to be made\n  if (!results) {\n    return <Centered text=\"Make a search\" />;\n  }\n\n  // or a funny drawing (not found 404)\n  if (Array.isEmpty(results)) {\n    return <Centered text=\"No search results found\" />;\n  }\n\n  // Search results\n  const items = results.map((item, index) => (\n    <SearchResultItem index={index} item={item} />\n  ));\n  return <div className=\"container\">{items}</div>;\n}\n\nfunction SearchResultItem({ item, index }) {\n  return (\n    <div className=\"panel panel-default\">\n      <div className=\"panel-heading\">\n        {item.name} — by {item.ownerId} — {item.lastEditedAt}\n      </div>\n      <div className=\"panel-body\">{item.description}</div>\n      <div className=\"panel-footer\">\n        <Link to={`/stories/${item.id}`}>Read the story</Link>\n        <Link to={`/stories/${item.id}/edit`}>Edit the story</Link>\n      </div>\n    </div>\n  );\n}\n\nfunction Centered({ text }) {\n  return (\n    <div className=\"jumbotron d-flex align-items-center\">\n      <div className=\"container text-center\">\n        <h2>{text}</h2>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Menu({ loggedIn }) {\n  let loginButtons;\n  if (!loggedIn) {\n    loginButtons = (\n      <div>\n        <Link to=\"/login\"> Log in </Link>\n        <Link to=\"/register\"> Register </Link>\n      </div>\n    );\n  } else {\n    loginButtons = (\n      <div>\n        <Link to=\"/profile\"> Profile </Link>\n        <Link to=\"/logout\"> Log out </Link>\n      </div>\n    );\n  }\n\n  return (\n    <menu>\n      <Link to=\"/\"> Writtter </Link>\n      <Link to=\"/about\"> About </Link>\n      <Link to=\"/search\"> Search </Link>\n      <Link to=\"/create\"> Create </Link>\n      {loginButtons}\n    </menu>\n  );\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n\nexport default class UserPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: false\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <div>\n            {/* Username: {username = \"Guillaume\"} */}\n            {/* <img> {userimage = \"hello\"} </img> */}\n          </div>\n          <Link to=\"/user/:userId/stories\"> Stories </Link>\n          <Link to=\"/user/:userId/competitions\"> Competitions </Link>\n          <Link to=\"/user/:userId/likes\"> Likes </Link>\n          <Link to=\"/user/:userId/comments\"> Comments </Link>\n\n          <Switch>\n            <Route path=\"/user/:userId/stories\">\n              {\" \"}\n              <Stories liked={false} />{\" \"}\n            </Route>\n            <Route path=\"/user/:userId/competitions\">\n              {\" \"}\n              <Competitions />{\" \"}\n            </Route>\n            <Route path=\"/user/:userId/likes\">\n              {\" \"}\n              <Stories liked={true} />{\" \"}\n            </Route>\n            <Route path=\"/user/:userId/comments\">\n              {\" \"}\n              <Comments />{\" \"}\n            </Route>\n            <Route path=\"/user/:userId\">\n              {\" \"}\n              <Stories liked={false} />{\" \"}\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nfunction Stories(params) {}\n\nfunction Competitions(params) {}\n\nfunction Comments(params) {}\n","import React, { Component } from \"react\";\n\nconst API_BASE_URL = \"https://writtter.herokuapp.com\";\n\nexport default class CreateUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(field, event) {\n    const obj = {};\n    obj[field] = event.target.value;\n    this.setState(obj);\n  }\n\n  async handleSubmit(event) {\n    // Prevent from refreshing\n    event.preventDefault();\n\n    console.log(\"Event\", event);\n    // Send data to the server\n    const response = await fetch(`${API_BASE_URL}/users`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        email: this.state.email,\n        password: this.state.password\n      })\n    });\n\n    console.log(\"response\", response);\n\n    // Redirect\n    window.location.href = \"/\";\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Create a new account</h1>\n\n        <form onSubmit={this.handleSubmit}>\n          <fieldset className=\"form-group\">\n            <label>Username:</label>\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <div className=\"input-group-text\">@</div>\n              </div>\n              <input\n                value={this.state.username}\n                onChange={this.handleChange.bind(this, \"username\")}\n                id=\"username\"\n                type=\"text\"\n                name=\"title\"\n                className=\"form-control\"\n                placeholder=\"Enter your username\"\n                required\n              />\n            </div>\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Email:</label>\n            <input\n              value={this.state.email}\n              onChange={this.handleChange.bind(this, \"email\")}\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              className=\"form-control\"\n              placeholder=\"Enter your email address\"\n              required\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Password:</label>\n            <input\n              value={this.state.password}\n              onChange={this.handleChange.bind(this, \"password\")}\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              className=\"form-control\"\n              placeholder=\"Enter your password\"\n              required\n            />\n            <small id=\"passwordHelpInline\" className=\"text-muted\">\n              Must be 8-20 characters long.\n            </small>\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              name=\"rules\"\n              required\n            />\n            <label className=\"form-check-label\">\n              Accept rules and email subscription\n            </label>\n            <small id=\"passwordHelpInline\" className=\"text-muted\">\n              No commercial offer will be send to you, just regular usage.\n            </small>\n          </fieldset>\n          <fieldset className=\"form-group text-center\">\n            <input\n              type=\"submit\"\n              value=\"Create account\"\n              className=\"btn btn-primary\"\n            />\n          </fieldset>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nconst API_BASE_URL = \"https://writtter.herokuapp.com\";\n\nexport default class StoryReader extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      story: {},\n      isLoading: false,\n      error: null,\n      storyId: props.storyId\n    };\n  }\n\n  async componentWillMount() {\n    this.setState({ isLoading: true });\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/stories/${this.storyId}`);\n      if (!response.ok) {\n        throw new Error(\"Something went wrong ...\");\n      }\n      const data = await response.json();\n      this.setState({ story: data.story, isLoading: false });\n    } catch (error) {\n      this.setState({ error, isLoading: false });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const { story, isLoading, error } = this.state;\n\n    if (error) {\n      return <p>{error.message}</p>;\n    }\n\n    if (isLoading || !story) {\n      return <div> Loading story </div>;\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"panel panel-default\">\n          <div className=\"panel-heading\">\n            {story.name} — by {story.ownerId} — {story.lastEditedAt}\n          </div>\n          <div className=\"panel-body\">{story.content}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport Connect from \"./components/Connect\";\nimport CreateView from \"./components/creates/CreateView\";\nimport SearchPage from \"./components/SearchPage\";\nimport Menu from \"./components/Menu\";\nimport UserPage from \"./components/UserPage\";\nimport CreateUser from \"./components/creates/CreateUser\";\nimport StoryReader from \"./components/readers/StoryReader\"\n\nexport default class App extends Component {\n  constructor(props) {\n    super();\n    this.state = {};\n  }\n\n  componentDidMount() {\n    fetch(\"URL\")\n      .then(response => response.json())\n      .then(responseJson => {\n        this.setState({});\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Menu></Menu>\n\n          <Switch>\n            <Route path=\"/create\">\n              <CreateView />\n            </Route>\n            <Route path=\"/search\">\n              <SearchPage />\n            </Route>\n            <Route path=\"/profile\">\n              <UserPage userId={this.state.userId} />\n            </Route>\n\n            <Route path=\"/user\">\n              <UserPage />\n            </Route>\n            <Route path=\"/login\">\n              <Connect />\n            </Route>\n            <Route path=\"/register\">\n              <CreateUser />\n            </Route>\n            <Route path=\"/stories/:id\" component={({ match }) => (<StoryReader storyId={match.params.id} />)} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
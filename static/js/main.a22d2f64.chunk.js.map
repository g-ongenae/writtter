{"version":3,"sources":["Config.js","components/Connect.js","components/creates/TagChoices.js","components/creates/RuleChoices.js","components/creates/CreateCompetition.js","components/creates/CreateRule.js","components/creates/CreateStory.js","components/creates/CreateView.js","components/SearchPage.js","components/Menu.js","components/lists/Stories.js","components/lists/Competitions.js","components/lists/Comments.js","components/UserPage.js","components/creates/CreateUser.js","components/readers/StoryReader.js","components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["local","process","this","FRONT_BASE_URL","API_BASE_URL","url","Connect","state","className","id","type","name","placeholder","required","value","Component","TagChoices","props","tags","isLoading","setState","fetch","Config","getApi","response","ok","Error","json","data","error","tagsChoices","map","tag","multiple","RuleChoices","rules","rulesChoices","rule","CreateCompetition","description","finishDate","field","event","obj","target","htmlFor","onChange","handleChange","bind","rows","DatePicker","competition","defaultChecked","userId","binder","d","Date","min","getDate","getMonth","getUTCFullYear","data-date-format","icon","Calendar","CreateRule","CreateStory","CreateView","Menu","activeViewName","location","pathname","path","getUrl","macro","propName","to","SearchPage","SearchBar","SearchResults","Search","results","Centered","text","Array","isEmpty","items","item","index","SearchResultItem","ownerId","lastEditedAt","logButtons","loggedIn","push","aria-label","Stories","console","log","Competitions","Comments","UserPage","liked","CreateUser","username","email","password","handleSubmit","preventDefault","method","headers","Accept","body","JSON","stringify","window","href","onSubmit","StoryReader","story","storyId","isArray","length","message","_isMounted","date","createdAt","toDateString","content","HomePage","params","App","component","AboutView","match","exact","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a22d2f64.chunk.js","sourcesContent":["\nexport class Config {\n  constructor(local = process.env.NODE_ENV) {\n    this.FRONT_BASE_URL = local === \"development\" ? \"\" : \"/writtter\";\n    this.API_BASE_URL = \"https://writtter.herokuapp.com\"; // local === \"development\" ? \"http://localhost:5050\" :\n  }\n\n  /**\n   * Return the full path of the API request\n   * @param {URI} url the path to target.\n   */\n  getApi(url = \"\") {\n    return `${this.API_BASE_URL}${url}`;\n  }\n\n  /**\n   * Return the full path of the front view url\n   * @param {URI} url the path to target.\n   */\n  getUrl(url = \"\") {\n    return `${this.FRONT_BASE_URL}${url}`;\n  }\n}\n\nexport default new Config();","import React, { Component } from \"react\";\n\nexport default class Connect extends Component {\n  constructor() {\n    super();\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1> Connect </h1>\n        <form>\n          <fieldset className=\"form-group\">\n            <label>Username:</label>\n            <input\n              id=\"username\"\n              type=\"text\"\n              name=\"title\"\n              className=\"form-control\"\n              placeholder=\"Enter your username\"\n              required\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Password:</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              className=\"form-control\"\n              placeholder=\"Enter your password\"\n              required\n            />\n          </fieldset>\n          <fieldset className=\"form-group text-center\">\n            <input type=\"submit\" value=\"Log in\" className=\"btn btn-primary\" />\n          </fieldset>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\n\nexport default class TagChoices extends Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      tags: [],\n      isLoading: false\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n\n    try {\n      const response = await fetch(Config.getApi(\"/tags\"));\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch tags\");\n      }\n\n      const data = await response.json();\n      this.setState({ tags: data.tags, isLoading: false });\n    } catch (error) {\n      this.setState({ error, isLoading: false });\n    }\n  }\n\n  render() {\n    const tagsChoices = this.state.tags.map(tag => (\n      <option value={tag.id}>{tag.name}</option>\n    ));\n\n    return (\n      <select name=\"tags\" className=\"form-control\" multiple>\n        {tagsChoices}\n      </select>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\n\nexport default class RuleChoices extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      rules: [],\n      isLoading: false\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n\n    try {\n      const response = await fetch(Config.getApi(\"/rules\"));\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch tags\");\n      }\n\n      const data = await response.json();\n      this.setState({ tags: data.tags, isLoading: false });\n    } catch (error) {\n      this.setState({ error, isLoading: false });\n    }\n  }\n\n  render() {\n    const rulesChoices = this.state.rules.map(rule => (\n      <option value={rule.id}>{rule.name}</option>\n    ));\n\n    return (\n      <select name=\"rules\" className=\"form-control\" multiple>\n        {rulesChoices}\n      </select>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Octicon, { Calendar } from \"@primer/octicons-react\";\n\nimport TagChoices from \"./TagChoices\";\nimport RuleChoices from \"./RuleChoices\";\n\nexport default class CreateCompetition extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      name: \"\",\n      description: \"\",\n      finishDate: \"\"\n    };\n  }\n\n  handleChange(field, event) {\n    const obj = {};\n    obj[field] = event.target.value;\n    this.setState(obj);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Create a new competition</h1>\n\n        <form>\n          <fieldset className=\"form-group\">\n            <label htmlFor=\"title\">Title:</label>\n            <input\n              value={this.state.name}\n              onChange={this.handleChange.bind(this, \"name\")}\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              className=\"form-control\"\n              placeholder=\"Enter title\"\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Description:</label>\n            <textarea\n              value={this.state.description}\n              onChange={this.handleChange.bind(this, \"description\")}\n              name=\"description\"\n              className=\"form-control\"\n              placeholder=\"Write a description for your story\"\n              rows=\"3\"\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Due date:</label>\n            <DatePicker competition={this} />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              name=\"isPublic\"\n            />\n            <label className=\"form-check-label\">Public Mode</label>\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              name=\"commentsEnabled\"\n              defaultChecked\n            />\n            <label className=\"form-check-label\">Comments enabled</label>\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Rules:</label>\n            <RuleChoices userId={this.props.userId} binder={this} />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Tags:</label>\n            <TagChoices userId={this.props.userId} binder={this} />\n          </fieldset>\n          <fieldset className=\"form-group text-center\">\n            <input\n              type=\"submit\"\n              value=\"Create competition\"\n              className=\"btn btn-primary\"\n            />\n          </fieldset>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction DatePicker({competition}) {\n  const d = new Date();\n  const min = `${d.getDate()}/${d.getMonth()}/${d.getUTCFullYear()}`;\n\n  return (\n    <div className=\"input-group date\">\n      <input\n        value={competition.state.finishDate}\n        onChange={competition.handleChange.bind(competition, \"finishDate\")}\n        className=\"form-control\"\n        data-date-format=\"mm/dd/yyyy\"\n        type=\"date\"\n        min={min}\n      />\n      <span className=\"input-group-append\">\n        <span className=\"input-group-text\">\n          <Octicon icon={Calendar} />\n        </span>\n      </span>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nimport TagChoices from \"./TagChoices\";\n\nexport default class CreateRule extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Create a new rule</h1>\n\n        <form>\n          <fieldset className=\"form-group\">\n            <label htmlFor=\"title\">Title:</label>\n            <input\n              id=\"title\"\n              type=\"text\"\n              name=\"title\"\n              className=\"form-control\"\n              placeholder=\"Enter title\"\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Description:</label>\n            <textarea\n              name=\"description\"\n              className=\"form-control\"\n              placeholder=\"Write a description for your story\"\n              rows=\"3\"\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              name=\"isPublic\"\n            />\n            <label className=\"form-check-label\">Public Mode</label>\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Tags:</label>\n            <TagChoices userId={this.props.userId} />\n          </fieldset>\n          <fieldset className=\"form-group text-center\">\n            <input\n              type=\"submit\"\n              value=\"Create rule\"\n              className=\"btn btn-primary\"\n            />\n          </fieldset>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport TagChoices from \"./TagChoices\";\nimport RuleChoices from \"./RuleChoices\";\n\nexport default class CreateStory extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Create a new story</h1>\n\n        <form>\n          <fieldset className=\"form-group\">\n            <label htmlFor=\"title\">Title:</label>\n            <input\n              id=\"title\"\n              type=\"text\"\n              name=\"title\"\n              className=\"form-control\"\n              placeholder=\"Enter title\"\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Description:</label>\n            <textarea\n              name=\"description\"\n              className=\"form-control\"\n              placeholder=\"Write a description for your story\"\n              rows=\"3\"\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              name=\"isPublic\"\n            />\n            <label className=\"form-check-label\">Public Mode</label>\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              name=\"commentsEnabled\"\n              defaultChecked\n            />\n            <label className=\"form-check-label\">Comments enabled</label>\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Rules:</label>\n            <RuleChoices userId={this.props.userId} />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Tags:</label>\n            <TagChoices userId={this.props.userId} />\n          </fieldset>\n          <fieldset className=\"form-group text-center\">\n            <input\n              type=\"submit\"\n              value=\"Create story\"\n              className=\"btn btn-primary\"\n            />\n          </fieldset>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n\nimport Config from \"../../Config\";\nimport CreateCompetition from \"./CreateCompetition\";\nimport CreateRule from \"./CreateRule\";\nimport CreateStory from \"./CreateStory\";\n\nexport default function CreateView(props) {\n  return (\n    <Router>\n      <Menu activeViewName={props.location.pathname} />\n\n      <Switch>\n        <Route path={Config.getUrl(\"/create/story\")}>\n          <CreateStory />\n        </Route>\n        <Route path={Config.getUrl(\"/create/competition\")}>\n          <CreateCompetition />\n        </Route>\n        <Route path={Config.getUrl(\"/create/rule\")}>\n          <CreateRule />\n        </Route>\n        <Route path={Config.getUrl(\"/create\")}>\n          <CreateStory />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\n/**\n * @todo fix button not changing color when clicked (use onClick event)\n * @param {string} activeViewName \n */\nfunction Menu({ activeViewName }) {\n  const active = \"btn btn-lg btn-block btn-outline-primary\";\n  const inactive = \"btn btn-lg btn-block btn-primary\";\n  const macro = (propName) => `/create/${propName}` === activeViewName ? active : inactive;\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light rounded\">\n      <div className=\"navbar-collapse justify-content-md-center\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item active\">\n            <Link className=\"nav-link\" to={Config.getUrl(\"/create/story\")}>\n              <button type=\"button\" className={macro(\"story\")}>Story</button>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={Config.getUrl(\"/create/competition\")}> \n              <button type=\"button\" className={macro(\"competition\")}>Competition</button>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={Config.getUrl(\"/create/rule\")}> \n              <button type=\"button\" className={macro(\"rule\")}>Rule</button>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n","import React, { Component } from \"react\";\nimport Octicon, { Search } from \"@primer/octicons-react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nexport default class SearchPage extends Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <SearchBar />\n          <SearchResults />\n        </Router>\n      </div>\n    );\n  }\n}\n\nfunction SearchBar() {\n  return (\n    <div className=\"container\">\n      <h1> Search Page </h1>\n      <form className=\"form-row\">\n        <div className=\"col-sm-2\"></div>\n        <fieldset className=\"col-sm-7 form-group\">\n          <div className=\"input-group\">\n            <div className=\"input-group-prepend\">\n              <div className=\"input-group-text\">\n                <Octicon icon={Search} />\n              </div>\n            </div>\n            <input\n              id=\"search\"\n              type=\"search\"\n              name=\"search\"\n              className=\"form-control\"\n              required\n            />\n          </div>\n        </fieldset>\n        <fieldset className=\"col-sm-2 form-group\">\n          <input type=\"submit\" value=\"Search\" className=\"btn btn-primary\" />\n        </fieldset>\n      </form>\n    </div>\n  );\n}\n\nfunction SearchResults({ results }) {\n  // waiting for search to be made\n  if (!results) {\n    return <Centered text=\"Make a search\" />;\n  }\n\n  // or a funny drawing (not found 404)\n  if (Array.isEmpty(results)) {\n    return <Centered text=\"No search results found\" />;\n  }\n\n  // Search results\n  const items = results.map((item, index) => (\n    <SearchResultItem index={index} item={item} />\n  ));\n  return <div className=\"container\">{items}</div>;\n}\n\nfunction SearchResultItem({ item, index }) {\n  return (\n    <div className=\"panel panel-default\">\n      <div className=\"panel-heading\">\n        {item.name} — by {item.ownerId} — {item.lastEditedAt}\n      </div>\n      <div className=\"panel-body\">{item.description}</div>\n      <div className=\"panel-footer\">\n        <Link to={`/stories/${item.id}`}>Read the story</Link>\n        <Link to={`/stories/${item.id}/edit`}>Edit the story</Link>\n      </div>\n    </div>\n  );\n}\n\nfunction Centered({ text }) {\n  return (\n    <div className=\"jumbotron d-flex align-items-center\">\n      <div className=\"container text-center\">\n        <h2>{text}</h2>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Config from \"../Config\";\n\nexport default function Menu({ loggedIn }) {\n  const logButtons = [];\n  // TODO simplify\n  if (!loggedIn) {\n    logButtons.push(<li className=\"nav-item\">\n      <Link className=\"nav-link\" to={Config.getUrl(\"/login\")}> Log in </Link>\n    </li>);\n    logButtons.push(<li className=\"nav-item\">\n      <Link className=\"nav-link\" to={Config.getUrl(\"/register\")}> Register </Link>\n    </li>);\n  } else {\n    logButtons.push(<li className=\"nav-item\">\n      <Link className=\"nav-link\" to={Config.getUrl(\"/profile\")}> Profile </Link>\n    </li>);\n    logButtons.push(<li className=\"nav-item\">\n      <Link className=\"nav-link\" to={Config.getUrl(\"/logout\")}> Log out </Link>\n    </li>);\n  }\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to={Config.getUrl(\"/\")}> Writtter </Link>\n      {/* TODO fix me \n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button> */}\n\n      <div className=\"collapse navbar-collapse show\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={Config.getUrl(\"/about\")}> About </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={Config.getUrl(\"/search\")}> Search </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to={Config.getUrl(\"/create\")}> Create </Link>\n          </li>\n          {logButtons[0]}\n          {logButtons[1]}\n        </ul>\n        <form className=\"form-inline my-2 my-lg-0\">\n          <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n          <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n        </form>\n      </div>\n    </nav>\n  );\n}\n","import React, { Component } from \"react\";\n\nexport default class Stories extends Component {\n  constructor(props) {\n    super(props);\n\n    console.log('Hello');\n  }\n  render() {\n    return(<h1>Hello here are the stories</h1>);\n  }\n}","import React, { Component } from \"react\";\n\nexport default class Competitions extends Component {\n  constructor(props) {\n    super(props);\n\n    console.log('Hello');\n  }\n\n  render() {\n    return(<h1>Hello here are the competitions</h1>);\n  }\n}","import React, { Component } from \"react\";\n\nexport default class Comments extends Component {\n  constructor(props) {\n    super(props);\n\n    console.log('Hello');\n  }\n\n\n  render() {\n    return(<h1>Hello here are the comments</h1>);\n  }\n}","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n\nimport Config from \"../Config\";\nimport Stories from \"./lists/Stories\";\nimport Competitions from \"./lists/Competitions.js\";\nimport Comments from \"./lists/Comments\";\n\nexport default class UserPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: false,\n      userId: 0,\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <div>\n            {/* Username: {username = \"Guillaume\"} */}\n            {/* <img> {userimage = \"hello\"} </img> */}\n          </div>\n          <Link to={Config.getUrl(`/user/${this.state.userId}/stories`)}>Stories</Link>\n          <Link to={Config.getUrl(`/user/${this.state.userId}/competitions`)}>Competitions</Link>\n          <Link to={Config.getUrl(`/user/${this.state.userId}/likes`)}>Likes</Link>\n          <Link to={Config.getUrl(`/user/${this.state.userId}/comments`)}>Comments</Link>\n\n          <Switch>\n            <Route path={Config.getUrl(\"/user/:userId/stories\")}>\n              <Stories liked={false} userId={this.state.userId} />\n            </Route>\n            <Route path={Config.getUrl(\"/user/:userId/competitions\")}>\n              <Competitions userId={this.state.userId} />\n            </Route>\n            <Route path={Config.getUrl(\"/user/:userId/likes\")}>\n              <Stories liked={true} userId={this.state.userId} />\n            </Route>\n            <Route path={Config.getUrl(\"/user/:userId/comments\")}>\n              <Comments userId={this.state.userId} />\n            </Route>\n            <Route path={Config.getUrl(\"/user/:userId\")}>\n              <Stories liked={false} userId={this.state.userId} />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\n\nexport default class CreateUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(field, event) {\n    const obj = {};\n    obj[field] = event.target.value;\n    this.setState(obj);\n  }\n\n  async handleSubmit(event) {\n    // Prevent from refreshing\n    event.preventDefault();\n\n    console.log(\"Event\", event);\n    // Send data to the server\n    const response = await fetch(Config.getApi(\"/users\"), {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        email: this.state.email,\n        password: this.state.password\n      })\n    });\n\n    console.log(\"response\", response);\n\n    // Redirect\n    window.location.href = Config.getUrl(\"/\");\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Create a new account</h1>\n\n        <form onSubmit={this.handleSubmit}>\n          <fieldset className=\"form-group\">\n            <label>Username:</label>\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <div className=\"input-group-text\">@</div>\n              </div>\n              <input\n                value={this.state.username}\n                onChange={this.handleChange.bind(this, \"username\")}\n                id=\"username\"\n                type=\"text\"\n                name=\"title\"\n                className=\"form-control\"\n                placeholder=\"Enter your username\"\n                required\n              />\n            </div>\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Email:</label>\n            <input\n              value={this.state.email}\n              onChange={this.handleChange.bind(this, \"email\")}\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              className=\"form-control\"\n              placeholder=\"Enter your email address\"\n              required\n            />\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <label>Password:</label>\n            <input\n              value={this.state.password}\n              onChange={this.handleChange.bind(this, \"password\")}\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              className=\"form-control\"\n              placeholder=\"Enter your password\"\n              required\n            />\n            <small id=\"passwordHelpInline\" className=\"text-muted\">\n              Must be 8-20 characters long.\n            </small>\n          </fieldset>\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              name=\"rules\"\n              required\n            />\n            <label className=\"form-check-label\">\n              Accept rules and email subscription\n            </label>\n            <small id=\"passwordHelpInline\" className=\"text-muted\">\n              No commercial offer will be send to you, just regular usage.\n            </small>\n          </fieldset>\n          <fieldset className=\"form-group text-center\">\n            <input\n              type=\"submit\"\n              value=\"Create account\"\n              className=\"btn btn-primary\"\n            />\n          </fieldset>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nimport Config from \"../../Config\";\n\nexport default class StoryReader extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      story: {},\n      isLoading: false,\n      error: null,\n      storyId: props.storyId\n    };\n  }\n\n  async componentWillMount() {\n    this.setState({ isLoading: true });\n    try {\n      const response = await fetch(Config.getApi(`/stories/${this.state.storyId}`));\n      if (!response.ok) {\n        throw new Error(\"Something went wrong...\");\n      }\n      const data = await response.json();\n      if (!Array.isArray(data) || data.length === 0) {\n        this.setState({ error: { message: \"Not found\" }, isLoading: false });\n        this._isMounted = true;\n        return;\n      }\n\n      this.setState({ story: data[0], isLoading: false });\n      this._isMounted = true;\n      return;\n    } catch (error) {\n      this.setState({ error, isLoading: false });\n      this._isMounted = true;\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const { story, isLoading, error } = this.state;\n\n    if (error) {\n      return <p>An error occurred, sorry: {error.message}</p>;\n    }\n\n    if (isLoading || !story) {\n      return <div> Loading story </div>;\n    }\n\n    const date = new Date(story.lastEditedAt || story.createdAt);\n    return (\n      <Router>\n        <div className=\"container\">\n          <div className=\"card panel-default\">\n            <div className=\"card-header text-center\">\n              <b>{story.name}</b> — by <Link to={`/user/${story.ownerId}=`}>{story.ownerId}</Link> — {date.toDateString()}\n            </div>\n            <div className=\"card-body\">{story.content || \"No content for now\"}</div>\n            <div className=\"card-footer\">\n              <Link to={`/stories/${story.id}/edit`}>\n                <button type=\"button\" className=\"btn btn-lg btn-block btn-primary\">\n                  Edit the story\n                </button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class HomePage extends Component {\n  constructor(params) {\n    super(params);\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n\n  }\n\n  render() {\n    return (\n      <section className=\"App-section\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        <h1>Writtter</h1>\n        <h4>The place to play with words and stories, together.</h4>\n        <p>Coming Soon</p>\n      </section>\n    );\n  }\n};","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport Config from \"./Config\";\nimport Connect from \"./components/Connect\";\nimport CreateView from \"./components/creates/CreateView\";\nimport SearchPage from \"./components/SearchPage\";\nimport Menu from \"./components/Menu\";\nimport UserPage from \"./components/UserPage\";\nimport CreateUser from \"./components/creates/CreateUser\";\nimport StoryReader from \"./components/readers/StoryReader\";\nimport HomePage from \"./components/HomePage\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      userId: '',\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Menu />\n\n          <Switch>\n            <Route path={Config.getUrl(\"/about\")} component={AboutView} />\n            <Route path={Config.getUrl('/create')} component={CreateView} />\n            <Route path={Config.getUrl('/search')} component={SearchPage} />\n            <Route path={Config.getUrl('/profile')}>\n              <UserPage userId={this.state.userId} />\n            </Route>\n            <Route path={Config.getUrl('/user')} component={UserPage} />\n            <Route path={Config.getUrl('/login')} component={Connect} />\n            <Route path={Config.getUrl('/register')} component={CreateUser} />\n            <Route path=\"/stories/:id\" component={({ match }) => (<StoryReader storyId={match.params.id} />)} />\n            <Route exact path=\"/\" component={HomePage} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nfunction AboutView(params) {\n  return (\n    <section className=\"App-section\">\n      <h1>Writtter</h1>\n      <h4>The place to play with words and stories, together.</h4>\n      <p>\n        Created by <a href=\"https://g-ongenae.github.io/\">Guillaume Ongenae</a>\n      </p>\n    </section>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}